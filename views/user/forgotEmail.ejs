<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reset Your Password</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }

        .container {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 24px;
            padding: 40px;
            width: 100%;
            max-width: 420px;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.15);
            border: 1px solid rgba(255, 255, 255, 0.2);
            position: relative;
            overflow: hidden;
        }

        .container::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(90deg, #667eea, #764ba2, #f093fb);
            background-size: 200% 100%;
            animation: shimmer 2s ease-in-out infinite;
        }

        @keyframes shimmer {
            0%, 100% { background-position: 200% 0; }
            50% { background-position: -200% 0; }
        }

        .logo {
            text-align: center;
            margin-bottom: 32px;
        }

        .logo-icon {
            width: 64px;
            height: 64px;
            background: linear-gradient(135deg, #667eea, #764ba2);
            border-radius: 16px;
            margin: 0 auto 16px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 28px;
            font-weight: bold;
            animation: float 3s ease-in-out infinite;
        }

        @keyframes float {
            0%, 100% { transform: translateY(0px); }
            50% { transform: translateY(-5px); }
        }

        .step {
            display: none;
            animation: fadeInSlide 0.5s ease-out;
        }

        .step.active {
            display: block;
        }

        @keyframes fadeInSlide {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        h1 {
            color: #1a1a1a;
            font-size: 28px;
            font-weight: 700;
            text-align: center;
            margin-bottom: 8px;
        }

        .subtitle {
            color: #666;
            text-align: center;
            margin-bottom: 32px;
            line-height: 1.5;
        }

        .form-group {
            margin-bottom: 24px;
            position: relative;
        }

        label {
            display: block;
            color: #333;
            font-weight: 600;
            margin-bottom: 8px;
            font-size: 14px;
        }

        input {
            width: 100%;
            padding: 16px 20px;
            border: 2px solid #e1e5e9;
            border-radius: 12px;
            font-size: 16px;
            transition: all 0.3s ease;
            background: white;
        }

        input:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
            transform: translateY(-2px);
        }

        .error {
            color: #e74c3c;
            font-size: 14px;
            margin-top: 8px;
            display: none;
        }

        .error.show {
            display: block;
            animation: shake 0.5s ease-in-out;
        }

        @keyframes shake {
            0%, 100% { transform: translateX(0); }
            25% { transform: translateX(-5px); }
            75% { transform: translateX(5px); }
        }

        .btn {
            width: 100%;
            padding: 16px;
            border: none;
            border-radius: 12px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .btn-primary {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            margin-bottom: 16px;
        }

        .btn-primary:hover:not(:disabled) {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
        }

        .btn-primary:active {
            transform: translateY(0);
        }

        .btn-primary:disabled {
            opacity: 0.6;
            cursor: not-allowed;
        }

        .btn-secondary {
            background: transparent;
            color: #667eea;
            border: 2px solid #667eea;
        }

        .btn-secondary:hover {
            background: #667eea;
            color: white;
            transform: translateY(-2px);
        }

        .divider {
            text-align: center;
            margin: 24px 0;
            position: relative;
            color: #999;
        }

        .divider::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 0;
            right: 0;
            height: 1px;
            background: #e1e5e9;
        }

        .divider span {
            background: rgba(255, 255, 255, 0.95);
            padding: 0 16px;
        }

        .success-icon {
            width: 80px;
            height: 80px;
            background: linear-gradient(135deg, #2ecc71, #27ae60);
            border-radius: 50%;
            margin: 0 auto 24px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 36px;
            animation: successPulse 0.6s ease-out;
        }

        @keyframes successPulse {
            0% {
                transform: scale(0);
                opacity: 0;
            }
            50% {
                transform: scale(1.1);
            }
            100% {
                transform: scale(1);
                opacity: 1;
            }
        }

        .loading {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 2px solid rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            border-top-color: white;
            animation: spin 1s ease-in-out infinite;
        }

        @keyframes spin {
            to { transform: rotate(360deg); }
        }

        .back-btn {
            background: none;
            border: none;
            color: #667eea;
            cursor: pointer;
            font-size: 14px;
            display: flex;
            align-items: center;
            gap: 8px;
            margin-bottom: 24px;
            padding: 8px;
            border-radius: 8px;
            transition: background 0.2s ease;
        }

        .back-btn:hover {
            background: rgba(102, 126, 234, 0.1);
        }

        @media (max-width: 480px) {
            .container {
                padding: 32px 24px;
                margin: 0 16px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- Step 1: Email Input -->
        <div class="step active" id="step1">
            <div class="logo">
                <div class="logo-icon">üîê</div>
                <h1>Forgot Password?</h1>
                <p class="subtitle">No worries! Enter your email address and we'll send you a reset link.</p>
            </div>

            <form id="forgotForm">
                <div class="form-group">
                    <label for="email">Email Address</label>
                    <input type="email" id="email" name="email" placeholder="Enter your email address" >
                    <div class="error" id="emailError">Please enter a valid email address</div>
                </div>

                <button type="submit"  class="btn btn-primary" id="sendBtn">
                    <span id="sendBtnText"  >Send Reset</span>
                    <div class="loading" id="sendBtnLoading" style="display: none;"></div>
                </button>
            </form>

            <div class="divider">
                <span>or</span>
            </div>
        </div>
            <button class="btn btn-secondary" onclick="window.location.href='/signup'">
                Create New Account
            </button>
        </div>
    </div>
<script>
document.addEventListener('DOMContentLoaded', function() {
    const forgotForm = document.getElementById('forgotForm');
    const emailInput = document.getElementById('email');
    const emailError = document.getElementById('emailError');
    const sendBtn = document.getElementById('sendBtn');
    const sendBtnText = document.getElementById('sendBtnText');
    const sendBtnLoading = document.getElementById('sendBtnLoading');

    // Remove the href attribute from the button if it exists (cleanup)
    sendBtnText.removeAttribute('href');

    forgotForm.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        // Reset error state
        emailError.classList.remove('show');
        emailInput.style.borderColor = '#e1e5e9';
        
        const email = emailInput.value.trim();
        
        // Basic client-side validation
        if (!email) {
            showError('Please enter your email address');
            return;
        }

        // Show loading state
        setLoadingState(true);

        try {
            // Fixed URL - make sure this matches your route
            const response = await fetch('/forgotPassword', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ email: email })
            });

            const data = await response.json();

            if (data.success) {
                // Success - redirect to the specified page
                if (data.redirect) {
                    window.location.href = data.redirect;
                } else {
                    // Fixed fallback redirect
                    window.location.href = '/emailVerification';
                }
            } else {
                // Show error message
                showError(data.message || 'An error occurred. Please try again.');
            }
        } catch (error) {
            console.error('Network error:', error);
            showError('Network error. Please check your connection and try again.');
        } finally {
            setLoadingState(false);
        }
    });

    function showError(message) {
        emailError.textContent = message;
        emailError.classList.add('show');
        emailInput.style.borderColor = '#e74c3c';
        emailInput.focus();
    }

    function setLoadingState(loading) {
        if (loading) {
            sendBtn.disabled = true;
            sendBtnText.style.display = 'none';
            sendBtnLoading.style.display = 'inline-block';
        } else {
            sendBtn.disabled = false;
            sendBtnText.style.display = 'inline';
            sendBtnLoading.style.display = 'none';
        }
    }

    // Clear error when user starts typing
    emailInput.addEventListener('input', function() {
        if (emailError.classList.contains('show')) {
            emailError.classList.remove('show');
            emailInput.style.borderColor = '#e1e5e9';
        }
    });
});
</script>

  
</body>
</html>