<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0"<title>Shoezy - Manage Addresses</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="/css/addressesPage.css">
</head>
<body>
    <!-- Header -->
    <%-include("../partials/user/navbar")%>

    <!-- Breadcrumb -->
    <div class="breadcrumb">
        <div class="container">
            <a href="/" class="breadcrumb-link">
                <i class="fas fa-home"></i> Home
            </a>
            <span class="breadcrumb-separator">/</span>
            <a href="/myaccount" class="breadcrumb-link">My Account</a>
            <span class="breadcrumb-separator">/</span>
            <span class="breadcrumb-current">Manage Addresses</span>
        </div>
    </div>

    <!-- Main Container -->
    <div class="main-container">
        <!-- Sidebar -->
        <% const currentPage = 'addresses'; %>
        <%-include("../partials/user/account-sidebar", { user, currentPage })%>

        <!-- Main Content -->
        <main class="main-content">
            <div class="content-header">
                <h2>Manage Addresses</h2>
                <button class="add-address-btn">
                    <i class="fas fa-plus"></i>
                    Add New Address
                </button>
            </div>

            <div class="addresses-grid">
                <!-- Address Card 1 -->
                <div class="address-card">
                    <div class="address-header">
                        <div class="address-type">
                            <i class="fas fa-home"></i>
                            <span>Home</span>
                        </div>
                        <div class="address-actions">
                            <button class="edit-btn" title="Edit">
                                <i class="fas fa-edit"></i>
                            </button>
                            <button class="delete-btn" title="Delete">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    </div>
                    <div class="address-details">
                        <h4><%=user.fullname%></h4>
                        <p>123 Main Street, Apartment 4B</p>
                        <p>New York, NY 10001</p>
                        <p>United States</p>
                        <p class="phone">+1 (555) 123-4567</p>
                    </div>
                    <div class="address-footer">
                        <span class="default-badge">Default</span>
                        <button class="set-default-btn" style="display: none;">Set as Default</button>
                    </div>
                </div>

                <!-- Address Card 2 -->
                <div class="address-card">
                    <div class="address-header">
                        <div class="address-type">
                            <i class="fas fa-briefcase"></i>
                            <span>Office</span>
                        </div>
                        <div class="address-actions">
                            <button class="edit-btn" title="Edit">
                                <i class="fas fa-edit"></i>
                            </button>
                            <button class="delete-btn" title="Delete">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    </div>
                    <div class="address-details">
                        <h4><%=user.fullname%></h4>
                        <p>456 Business Ave, Suite 200</p>
                        <p>New York, NY 10002</p>
                        <p>United States</p>
                        <p class="phone">+1 (555) 987-6543</p>
                    </div>
                    <div class="address-footer">
                        <button class="set-default-btn">Set as Default</button>
                    </div>
                </div>

                <!-- Add New Address Card -->
                <div class="address-card add-new-card">
                    <div class="add-new-content">
                        <div class="add-icon">
                            <i class="fas fa-plus"></i>
                        </div>
                        <h3>Add New Address</h3>
                        <p>Add a new delivery address</p>
                        <button class="add-new-btn">Add Address</button>
                    </div>
                </div>
            </div>

            <!-- Empty State (hidden by default) -->
            <div class="empty-addresses" style="display: none;">
                <div class="empty-icon">
                    <i class="fas fa-map-marker-alt"></i>
                </div>
                <h3>No addresses found</h3>
                <p>Add your first address to get started with deliveries</p>
                <button class="add-first-address-btn">
                    <i class="fas fa-plus"></i>
                    Add Your First Address
                </button>
            </div>
        </main>
    </div>

    <!-- Footer -->
    <%-include("../partials/user/userfooter")%>

    <!-- Add/Edit Address Modal -->
    <div class="modal-overlay" id="addressModal" style="display: none;">
        <div class="modal">
            <div class="modal-header">
                <h3 id="modalTitle">Add New Address</h3>
                <button class="close-modal">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div class="modal-body">
                <form id="addressForm">
                    <div class="form-row">
                        <div class="form-group">
                            <label>Full Name</label>
                            <input type="text" name="fullName" required>
                        </div>
                        <div class="form-group">
                            <label>Phone Number</label>
                            <input type="tel" name="phone" required>
                        </div>
                    </div>
                    <div class="form-group">
                        <label>Address Line 1</label>
                        <input type="text" name="address1" placeholder="House number, street name" required>
                    </div>
                    <div class="form-group">
                        <label>Address Line 2 (Optional)</label>
                        <input type="text" name="address2" placeholder="Apartment, suite, unit, building">
                    </div>
                    <div class="form-row">
                        <div class="form-group">
                            <label>City</label>
                            <input type="text" name="city" required>
                        </div>
                        <div class="form-group">
                            <label>State</label>
                            <input type="text" name="state" required>
                        </div>
                        <div class="form-group">
                            <label>ZIP Code</label>
                            <input type="text" name="zipCode" required>
                        </div>
                    </div>
                    <div class="form-group">
                        <label>Address Type</label>
                        <select name="addressType" required>
                            <option value="">Select type</option>
                            <option value="home">Home</option>
                            <option value="office">Office</option>
                            <option value="other">Other</option>
                        </select>
                    </div>
                    <div class="form-group checkbox-group">
                        <label class="checkbox-label">
                            <input type="checkbox" name="isDefault">
                            <span class="checkmark"></span>
                            Set as default address
                        </label>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="cancel-btn">Cancel</button>
                <button type="submit" form="addressForm" class="save-btn">Save Address</button>
            </div>
        </div>
    </div>

    <script>
        class AddressManager {
            constructor() {
                this.init();
            }

            init() {
                this.bindEvents();
            }

            bindEvents() {
                // Add new address buttons
                document.querySelectorAll('.add-address-btn, .add-new-btn, .add-first-address-btn').forEach(btn => {
                    btn.addEventListener('click', () => this.openAddModal());
                });

                // Edit buttons
                document.querySelectorAll('.edit-btn').forEach(btn => {
                    btn.addEventListener('click', (e) => this.openEditModal(e.target.closest('.address-card')));
                });

                // Delete buttons
                document.querySelectorAll('.delete-btn').forEach(btn => {
                    btn.addEventListener('click', (e) => this.deleteAddress(e.target.closest('.address-card')));
                });

                // Set default buttons
                document.querySelectorAll('.set-default-btn').forEach(btn => {
                    btn.addEventListener('click', (e) => this.setDefaultAddress(e.target.closest('.address-card')));
                });

                // Modal events
                document.querySelector('.close-modal').addEventListener('click', () => this.closeModal());
                document.querySelector('.cancel-btn').addEventListener('click', () => this.closeModal());
                document.querySelector('.modal-overlay').addEventListener('click', (e) => {
                    if (e.target.classList.contains('modal-overlay')) {
                        this.closeModal();
                    }
                });

                // Form submission
                document.getElementById('addressForm').addEventListener('submit', (e) => this.saveAddress(e));
            }

            openAddModal() {
                document.getElementById('modalTitle').textContent = 'Add New Address';
                document.getElementById('addressForm').reset();
                document.getElementById('addressModal').style.display = 'flex';
            }

            openEditModal(card) {
                document.getElementById('modalTitle').textContent = 'Edit Address';
                // Populate form with existing data
                const form = document.getElementById('addressForm');
                const details = card.querySelector('.address-details');
                
                // This would typically be populated with actual data
                form.fullName.value = details.querySelector('h4').textContent;
                
                document.getElementById('addressModal').style.display = 'flex';
            }

            closeModal() {
                document.getElementById('addressModal').style.display = 'none';
            }

            deleteAddress(card) {
                if (confirm('Are you sure you want to delete this address?')) {
                    card.style.transform = 'scale(0.8)';
                    card.style.opacity = '0';
                    
                    setTimeout(() => {
                        card.remove();
                        this.checkEmptyState();
                    }, 300);

                    this.showNotification('Address deleted successfully', 'success');
                }
            }

            setDefaultAddress(card) {
                // Remove default from all cards
                document.querySelectorAll('.address-card').forEach(c => {
                    const badge = c.querySelector('.default-badge');
                    const btn = c.querySelector('.set-default-btn');
                    if (badge) badge.style.display = 'none';
                    if (btn) btn.style.display = 'inline-block';
                });

                // Set this card as default
                const badge = card.querySelector('.default-badge');
                const btn = card.querySelector('.set-default-btn');
                if (badge) badge.style.display = 'inline-block';
                if (btn) btn.style.display = 'none';

                this.showNotification('Default address updated', 'success');
            }

            saveAddress(e) {
                e.preventDefault();
                
                // Here you would typically send the data to the server
                this.closeModal();
                this.showNotification('Address saved successfully', 'success');
                
                // Refresh the page or add the new address card dynamically
            }

            checkEmptyState() {
                const addressCards = document.querySelectorAll('.address-card:not(.add-new-card)').length;
                const emptyState = document.querySelector('.empty-addresses');
                const addressesGrid = document.querySelector('.addresses-grid');

                if (addressCards === 0) {
                    addressesGrid.style.display = 'none';
                    emptyState.style.display = 'flex';
                } else {
                    addressesGrid.style.display = 'grid';
                    emptyState.style.display = 'none';
                }
            }

            showNotification(message, type) {
                const notification = document.createElement('div');
                notification.className = `notification ${type}`;
                notification.innerHTML = `
                    <i class="fas fa-${type === 'success' ? 'check' : type === 'error' ? 'exclamation' : 'info'}"></i>
                    ${message}
                `;
                document.body.appendChild(notification);
                
                setTimeout(() => notification.classList.add('show'), 100);
                setTimeout(() => {
                    notification.classList.remove('show');
                    setTimeout(() => notification.remove(), 300);
                }, 3000);
            }
        }

        // Initialize address manager
        document.addEventListener('DOMContentLoaded', () => {
            new AddressManager();
        });
    </script>
</body>
</html>