<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Verify OTP - Shoezy</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }

        .container {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 24px;
            padding: 40px;
            width: 100%;
            max-width: 420px;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.15);
            border: 1px solid rgba(255, 255, 255, 0.2);
            position: relative;
            overflow: hidden;
        }

        h1 {
            color: #1a1a1a;
            font-size: 28px;
            font-weight: 700;
            text-align: center;
            margin-bottom: 8px;
        }

        .subtitle {
            color: #666;
            text-align: center;
            margin-bottom: 32px;
            line-height: 1.5;
        }

        .form-group {
            margin-bottom: 24px;
            position: relative;
        }

        input {
            width: 100%;
            padding: 16px 20px;
            border: 2px solid #e1e5e9;
            border-radius: 12px;
            font-size: 16px;
            transition: all 0.3s ease;
            background: white;
            text-align: center;
            letter-spacing: 0.5em;
        }

        input:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .error {
            color: #e74c3c;
            font-size: 14px;
            margin-top: 8px;
            display: none;
            text-align: center;
        }

        .error.show {
            display: block;
        }

        .btn {
            width: 100%;
            padding: 16px;
            border: none;
            border-radius: 12px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .btn-primary {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            margin-bottom: 16px;
        }

        .btn-primary:disabled {
            opacity: 0.6;
            cursor: not-allowed;
        }

        .resend-link {
            text-align: center;
            margin-top: 16px;
        }

        .resend-link a {
            color: #667eea;
            text-decoration: none;
            font-weight: 600;
        }

        .loading {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 2px solid rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            border-top-color: white;
            animation: spin 1s ease-in-out infinite;
        }

        @keyframes spin {
            to { transform: rotate(360deg); }
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Verify OTP</h1>
        <p class="subtitle">An OTP has been sent to <strong><%= email %></strong>. Please enter it below.</p>

        <form id="otpForm">
            <div class="form-group">
                <input type="text" id="otp" name="otp" placeholder="_ _ _ _ _ _" maxlength="6" required>
                <div class="error" id="otpError"></div>
            </div>

            <button type="submit" class="btn btn-primary" id="verifyBtn">
                <span id="verifyBtnText">Verify</span>
                <div class="loading" id="verifyBtnLoading" style="display: none;"></div>
            </button>
        </form>

        <div class="resend-link" id="resendContainer">
            <span id="timerText" style="color: #666;">Resend OTP in <span id="timer">60</span>s</span>
            <a href="#" id="resendOtpLink" style="display: none;">Resend OTP</a>
        </div>
    </div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const otpForm = document.getElementById('otpForm');
    const otpInput = document.getElementById('otp');
    const otpError = document.getElementById('otpError');
    const verifyBtn = document.getElementById('verifyBtn');
    const verifyBtnText = document.getElementById('verifyBtnText');
    const verifyBtnLoading = document.getElementById('verifyBtnLoading');
    const resendOtpLink = document.getElementById('resendOtpLink');
    const timerText = document.getElementById('timerText');
    const timerSpan = document.getElementById('timer');

    otpForm.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        otpError.classList.remove('show');
        otpInput.style.borderColor = '#e1e5e9';
        
        const otp = otpInput.value.trim();
        
        if (!otp || otp.length !== 6 || !/^\d{6}$/.test(otp)) {
            showError('Please enter a valid 6-digit OTP.');
            return;
        }

        setLoadingState(true);

        try {
            const response = await fetch('/verifyResetOtp', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ otp: otp })
            });

            const data = await response.json();

            if (data.success) {
                if (data.redirect) {
                    window.location.href = data.redirect; // This will redirect to /reset-password
                } else {
                    showError('Verification successful, but no redirect path provided.');
                }
            } else {
                showError(data.message || 'An error occurred. Please try again.');
            }
        } catch (error) {
            console.error('Network error:', error);
            showError('Network error. Please check your connection and try again.');
        } finally {
            setLoadingState(false);
        }
    });

    resendOtpLink.addEventListener('click', async function(e) {
        e.preventDefault();
        // Give user feedback
        resendOtpLink.style.pointerEvents = 'none';
        resendOtpLink.textContent = 'Sending...';
        try {
            const response = await fetch('/resendResetOtp', { method: 'POST' });
            const data = await response.json();
            if (data.success) {
                showSuccess(data.message); // Show success message
                startTimer(); // Restart timer on successful resend
            } else {
                showError(data.message || 'Failed to resend OTP.', true);
            }
        } catch (error) {
            showError('Network error. Could not resend OTP.');
        }
    });

    function showError(message, isResendError = false) {
        otpError.textContent = message;
        otpError.style.color = '#e74c3c'; // Ensure error color is red
        otpError.classList.add('show');
        otpInput.style.borderColor = '#e74c3c';
        if (isResendError) {
            resendOtpLink.style.pointerEvents = 'auto';
            resendOtpLink.textContent = 'Resend OTP';
        }
    }

    function showSuccess(message) {
        otpError.textContent = message;
        otpError.style.color = '#28a745'; // Success color
        otpError.classList.add('show');
    }

    function setLoadingState(loading) {
        if (loading) {
            verifyBtn.disabled = true;
            verifyBtnText.style.display = 'none';
            verifyBtnLoading.style.display = 'inline-block';
        } else {
            verifyBtn.disabled = false;
            verifyBtnText.style.display = 'inline';
            verifyBtnLoading.style.display = 'none';
        }
    }

    otpInput.addEventListener('input', function() {
        if (otpError.classList.contains('show')) {
            otpError.classList.remove('show');
            otpInput.style.borderColor = '#e1e5e9';
        }
    });

    let timerInterval;
    const TIMER_KEY = 'otpExpiryTime';

    function startTimer() {
        const expiryTime = Date.now() + 60 * 1000;
        sessionStorage.setItem(TIMER_KEY, expiryTime);
        runTimer(60);
    }

    function runTimer(initialTime) {
        clearInterval(timerInterval); // Clear any existing timer

        let timeLeft = initialTime;

        resendOtpLink.style.display = 'none';
        timerText.style.display = 'inline';
        resendOtpLink.textContent = 'Resend OTP';
        resendOtpLink.style.pointerEvents = 'auto';

        timerSpan.textContent = Math.ceil(timeLeft);

        timerInterval = setInterval(() => {
            timeLeft--;
            timerSpan.textContent = Math.ceil(timeLeft);
            if (timeLeft <= 0) {
                clearInterval(timerInterval);
                timerText.style.display = 'none';
                resendOtpLink.style.display = 'inline';
                sessionStorage.removeItem(TIMER_KEY);
            }
        }, 1000);
    }

    // Check for an existing timer on page load
    const savedExpiry = sessionStorage.getItem(TIMER_KEY);
    if (savedExpiry) {
        const remainingTime = (savedExpiry - Date.now()) / 1000;
        if (remainingTime > 0) {
            runTimer(remainingTime);
        } else {
            startTimer(); // Or just show the resend button immediately
        }
    } else {
        startTimer(); // Start a new timer if none is saved
    }

});
</script>

</body>
</html>