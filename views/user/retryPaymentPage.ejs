<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Retry Payment - Order #<%= order.orderNumber %></title>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        :root {
            --primary-color: #000000;
            --secondary-color: #ffffff;
            --accent-color: #007bff;
            --background-color: #f4f5f7;
            --text-color: #333333;
            --border-color: #e0e0e0;
            --error-color: #d9534f;
            --success-color: #5cb85c;
        }

        *,
        *::before,
        *::after {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Roboto', sans-serif;
            background-color: var(--background-color);
            color: var(--text-color);
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 2rem;
        }

        .payment-container {
            background: var(--secondary-color);
            border-radius: 16px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            max-width: 1100px;
            width: 100%;
            overflow: hidden;
        }

        .header {
            background: var(--primary-color);
            color: var(--secondary-color);
            padding: 2rem 2.5rem;
            display: flex;
            align-items: center;
            gap: 1.5rem;
        }

        .header h1 {
            font-size: 2.25rem;
            font-weight: 700;
        }

        .header p {
            font-size: 1rem;
            font-weight: 400;
            opacity: 0.8;
            margin-top: 0.25rem;
        }

        .content {
            padding: 2.5rem;
            display: grid;
            grid-template-columns: 1.2fr 1fr;
            gap: 2.5rem;
        }

        .section {
            margin-bottom: 2rem;
        }

        .section-title {
            font-size: 1.25rem;
            font-weight: 700;
            color: var(--primary-color);
            margin-bottom: 1.5rem;
            border-bottom: 2px solid var(--border-color);
            padding-bottom: 0.75rem;
        }

        .order-info {
            display: flex;
            flex-wrap: wrap;
            gap: 1rem;
            margin-bottom: 1.5rem;
        }

        .info-item {
            background-color: var(--background-color);
            padding: 0.75rem 1rem;
            border-radius: 8px;
            flex-grow: 1;
        }

        .info-label {
            font-size: 0.8rem;
            color: #666;
            font-weight: 500;
            display: block;
            margin-bottom: 0.25rem;
        }

        .info-value {
            font-size: 0.95rem;
            font-weight: 700;
            color: var(--text-color);
        }

        .failed-status {
            color: var(--error-color);
            font-weight: 700;
        }

        .product-card {
            background: var(--secondary-color);
            border: 1px solid var(--border-color);
            border-radius: 8px;
            padding: 1rem;
            display: flex;
            align-items: center;
            gap: 1rem;
            margin-bottom: 1rem;
        }

        .product-info {
            display: flex;
            align-items: center;
            flex-grow: 1;
            gap: 1rem;
        }

        .product-image {
            width: 70px;
            height: 70px;
            border-radius: 8px;
            overflow: hidden;
            flex-shrink: 0;
        }

        .product-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .product-details h3 {
            font-size: 1rem;
            font-weight: 700;
            color: var(--primary-color);
            margin-bottom: 0.25rem;
        }

        .product-details p {
            font-size: 0.9rem;
            color: #666;
        }

        .product-price {
            font-size: 1.1rem;
            font-weight: 700;
            color: var(--primary-color);
            text-align: right;
        }

        .summary-card {
            background: var(--secondary-color);
            border-radius: 8px;
            padding: 1.5rem;
            border: 1px solid var(--border-color);
        }

        .summary-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: 1rem;
            font-size: 1rem;
            padding-bottom: 1rem;
            border-bottom: 1px solid var(--border-color);
        }

        .summary-row:last-child {
            border-bottom: none;
            margin-bottom: 0;
        }

        .summary-row.total {
            border-top: 2px solid var(--primary-color);
            border-bottom: none;
            padding-top: 1.5rem;
            margin-top: 1rem;
            font-weight: 700;
            font-size: 1.25rem;
            color: var(--primary-color);
        }

        .delivery-address {
            background: var(--secondary-color);
            border-radius: 8px;
            padding: 1.5rem;
            border: 1px solid var(--border-color);
        }

        .address-content {
            line-height: 1.6;
            color: var(--text-color);
        }

        .address-name {
            font-weight: 700;
            color: var(--primary-color);
            margin-bottom: 0.5rem;
            font-size: 1.1rem;
            text-transform: capitalize;
        }

        .button-group {
            display: flex;
            gap: 1rem;
            margin-top: 2rem;
            grid-column: 1 / -1;
            justify-content: center;
            padding: 1.5rem 2.5rem;
            background-color: var(--background-color);
            border-top: 1px solid var(--border-color);
        }

        .btn {
            padding: 1rem 2rem;
            border-radius: 8px;
            font-weight: 700;
            font-size: 1rem;
            text-decoration: none;
            text-align: center;
            cursor: pointer;
            border: 2px solid transparent;
            transition: all 0.3s ease;
            width: 100%;
            max-width: 250px;
        }

        .btn-primary {
            background: var(--primary-color);
            color: var(--secondary-color);
        }

        .btn-primary:hover {
            background: #222;
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        }

        .btn-secondary {
            background: var(--secondary-color);
            color: var(--primary-color);
            border-color: var(--primary-color);
        }

        .btn-secondary:hover {
            background: var(--primary-color);
            color: var(--secondary-color);
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

        .loading {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(255, 255, 255, 0.9);
            display: none; /* Hidden by default */
            place-items: center;
            z-index: 9999;
        }

        .spinner {
            width: 50px;
            height: 50px;
            border: 5px solid var(--border-color);
            border-top-color: var(--primary-color);
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% {
                transform: rotate(0deg);
            }
            100% {
                transform: rotate(360deg);
            }
        }

        .success-popup {
            position: fixed;
            top: 1rem;
            right: 1rem;
            background: var(--primary-color);
            color: var(--secondary-color);
            padding: 12px 20px;
            border-radius: 6px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
            transform: translateX(300px);
            transition: transform 0.5s ease;
            z-index: 1000;
        }

        .success-popup.show {
            transform: translateX(0);
        }

        @media (max-width: 992px) {
            .content {
                grid-template-columns: 1fr;
                padding: 2rem;
            }
            .right-column {
                grid-row: 1;
            }

            .header h1 {
                font-size: 2rem;
            }
        }

        @media (max-width: 768px) {
            body {
                padding: 0;
            }
            .payment-container {
                border-radius: 0;
            }
            .content {
                padding: 1.5rem;
            }

            .button-group {
                flex-direction: column;
            }

            .btn {
                max-width: none;
            }

            .header h1 {
                font-size: 1.75rem;
            }
            .header {
                padding: 1.5rem;
            }
            .section {
                padding: 1rem;
            }
        }
    </style>
</head>

<body>
    <!-- Loading -->
    <div class="loading" id="loading">
        <div class="spinner"></div>
    </div>

    <div class="payment-container">
        <div class="header">
            <h1>🔄 Retry Payment</h1>
            <p>Complete your order to continue with your purchase</p>
        </div>

        <div class="content">
            <div class="main-content">
                <!-- Order Information -->
                <div class="section">
                    <div class="section-title">Order Information</div>
                    <div class="order-info">
                            <div class="info-item">
                                <span class="info-label">Order ID</span>
                                <span class="info-value">
                                    <%= order.orderNumber %>
                                </span>
                            </div>
                            <div class="info-item">
                                <span class="info-label">Order Date</span>
                                <span class="info-value">
                                    <%= new Date(order.createdAt).toLocaleDateString('en-US', {month: 'short', day: 'numeric', year: 'numeric'}) %>
                                </span>
                            </div>
                            <div class="info-item">
                                <span class="info-label">Created On</span>
                                <span class="info-value">
                                    <%= new Date(order.createdAt).toLocaleTimeString('en-US', {hour: '2-digit', minute: '2-digit'}) %>
                                </span>
                            </div>
                            <div class="info-item">
                                <span class="info-label">Payment Method</span>
                                <span class="info-value"><i class="fas fa-credit-card"></i> <%= order.paymentMethod %></span>
                            </div>
                            <div class="info-item">
                                <span class="info-label">Payment Status</span>
                                <span class="info-value failed-status"><i class="fas fa-exclamation-circle"></i> FAILED</span>
                            </div>
                    </div>
                </div>

                <!-- Order Items -->
                <div class="section">
                    <div class="section-title">Order Items (<%= order.items.length %>)</div>
                    <% order.items.forEach(item => { %>
                        <div class="product-card">
                            <div class="product-info">
                                <div class="product-image">
                                    <% if(item.productId.images) { %>
                                        <img src="<%= item.productId.images[0] %>" alt="<%= item.productId.name %>">
                                    <% } else { %>
                                        <i class="fas fa-shoe-prints" style="font-size: 2rem; color: #ccc;"></i>
                                    <% } %>
                                </div>
                                <div class="product-details">
                                    <h3><%= item.productId.name %></h3>
                                    <p>Price: ₹<%= item.price %></p>
                                    <p>Qty: <%= item.quantity %></p>
                                </div>
                            </div>
                            <div class="product-price">₹<%= item.totalPrice %></div>
                        </div>
                    <% }) %>
                </div>
            </div>

            <div class="sidebar">
                <!-- Order Summary -->
                <div class="section">
                    <div class="section-title">Order Summary</div>
                    <div class="summary-card">
                        <div class="summary-row">
                            <span>Subtotal</span>
                            <span>₹<%= order.totalAmount.toFixed(2) %></span>
                        </div>
                        <div class="summary-row total">
                            <span>Total Amount</span>
                            <span>₹<%= order.totalAmount %></span>
                        </div>
                    </div>
                </div>

                <!-- Delivery Address -->
                <div class="section">
                    <div class="section-title">Delivery Address</div>
                    <div class="address-content">
                        <div class="address-name"><i class="fas fa-user"></i> <%= order.address.fullName %></div>
                        <p><i class="fas fa-map-marker-alt"></i> <%= order.address.address %>, <%= order.address.city %>, <%= order.address.state %> - <%= order.address.pinCode %></p>
                        <% if (order.address.landmark) { %>
                            <p><i class="fas fa-landmark"></i> Landmark: <%= order.address.landmark %></p>
                        <% } %>
                        <p><i class="fas fa-phone"></i> <%= order.address.mobileNumber %></p>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Buttons -->
        <div class="button-group">
                <button class="btn btn-primary" onclick="retryPayment('<%= order._id %>')">
                    <i class="fas fa-credit-card"></i> Retry Payment
                </button>
                <button class="btn btn-secondary" onclick="backToOrders()">
                    ← Back to Orders
                </button>
            </div>
        </div>
    </div>

    <!-- Success Popup -->
    <div class="success-popup" id="successPopup">Payment initiated successfully!</div>

    <!-- Razorpay & SweetAlert2 -->
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        function showLoading() {
            document.getElementById('loading').style.display = 'grid';
        }
        function hideLoading() {
            document.getElementById('loading').style.display = 'none';
        }
        function showSuccess(message) {
            const popup = document.getElementById('successPopup');
            popup.textContent = message;
            popup.classList.add('show');
            setTimeout(() => { popup.classList.remove('show'); }, 3000);
        }

        async function retryPayment(orderId) {
            try {
                showLoading();
                
                const res = await fetch(`/payment/retryPayment/${orderId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                });

                const orderData = await res.json();

                if (!orderData.success) {
                    hideLoading();
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: orderData.message || 'Failed to initiate payment',
                        confirmButtonColor: '#000000'
                    });
                    return;
                }

                const options = {
                    key: orderData.key,
                    amount: orderData.razorpayOrder.amount,
                    currency: orderData.razorpayOrder.currency,
                    name: 'Shoezy',
                    description: 'Order Payment',
                    order_id: orderData.razorpayOrder.id,
                    prefill: {
                        name: orderData.order.address.fullName,
                        contact: orderData.order.address.mobileNumber
                    },
                    handler: function (response) {
                        fetch('/payment/verifyPayment', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({
                                razorpay_payment_id: response.razorpay_payment_id,
                                razorpay_order_id: response.razorpay_order_id,
                                razorpay_signature: response.razorpay_signature,
                                UserOrderId: orderData.order._id
                            })
                        })
                            .then(res => res.json())
                            .then(data => {
                                if (data.success) {
                                    window.location.href = '/checkout/orderSuccess?orderId='+ data.orderId;
                                } else {
                                    window.location.href = `/payment/orderFailed/${orderData.order._id}`;
                                }
                            });
                    },
                    modal: { 
                        ondismiss: function() {
                            hideLoading();
                        }
                    }
                };

                const rzp = new Razorpay(options);
                rzp.open();

            } catch (err) {
                hideLoading();
                console.error('Retry Payment Error:', err);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Unable to initiate payment. Try again.',
                    confirmButtonColor: '#000000'
                });
            }
        }

        function backToOrders() {
            showLoading();
            window.location.href = '/order';
        }

        window.addEventListener('load', () => {
            hideLoading();
        });
    </script>
</body>

</html>