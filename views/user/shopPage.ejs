<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shoezy - Premium Footwear Store</title>
    <link rel="stylesheet" href="/css/shopPage.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
    <style>
        /* CRITICAL: Wishlist Button Color Fix */
        .wishlist-btn i {
            color: #6b7280 !important; /* Default gray color */
            transition: color 0.3s ease;
        }
        
        .wishlist-btn.wishlist-active i {
            color: #ef4444 !important; /* Red color for active */
        }
        
        .wishlist-btn:hover i {
            color: #ef4444;
        }
        
        .wishlist-btn.wishlist-active:hover i {
            color: #dc2626;
        }

        /* Notification styles */
        .notification {
            position: fixed;
            top: 20px;
            right: 20px;
            background: linear-gradient(135deg, #10b981, #059669);
            color: white;
            padding: 12px 20px;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
            z-index: 10000;
            animation: slideIn 0.3s ease forwards;
            display: flex;
            align-items: center;
            gap: 8px;
            font-weight: 500;
        }

        .notification.error {
            background: linear-gradient(135deg, #ef4444, #dc2626);
        }

        @keyframes slideIn {
            from { transform: translateX(100%); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }

        @keyframes slideOut {
            from { transform: translateX(0); opacity: 1; }
            to { transform: translateX(100%); opacity: 0; }
        }

        @keyframes cartBounce {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.1); }
        }
    </style>
</head>

<body>
    <!-- Enhanced Navbar with Perfect Badge Alignment -->
    <%- include('../partials/user/navbar') %>

    <!-- Hero Section -->
    <section class="hero-section">
        <div class="hero-overlay"></div>
        <div class="hero-content">
            <div class="hero-text">
                <h1>Step Into Style</h1>
                <p>Discover our premium collection of footwear designed for comfort and elegance</p>
                <button class="hero-cta-btn" onclick="document.getElementById('shop').scrollIntoView({behavior: 'smooth'})">
                    <i class="fas fa-shopping-bag"></i>
                    Shop Collection
                </button>
            </div>
        </div>
    </section>

    <!-- Main Shop Section -->
    <section class="main-shop-section" id="shop">
        <div class="shop-container">
            <!-- Sidebar Filters -->
            <aside class="filters-sidebar">
                <div class="sidebar-header">
                    <h3><i class="fas fa-filter"></i> Filters</h3>
                    <button class="clear-all-btn" onclick="clearFilters()">
                        <i class="fas fa-times"></i>
                        Clear All
                    </button>
                </div>

                <!-- Search Filter -->
                <div class="filter-section">
                    <h4><i class="fas fa-search"></i> Search Products</h4>
                    <div class="search-input-wrapper">
                        <input type="text" id="searchInput" placeholder="Search products..." autocomplete="off">
                        <i class="fas fa-search search-icon"></i>
                    </div>
                </div>

                <!-- Category Filter -->
                <div class="filter-section">
                    <h4><i class="fas fa-tags"></i> Category</h4>
                    <select id="category" onchange="filterProducts()">
                        <option value="">All Categories</option>
                        <% if (categories && categories.length > 0) { %>
                            <% categories.forEach(category => { %>
                                <option value="<%= category._id %>">
                                    <%= category.name %>
                                </option>
                            <% }); %>
                        <% } %>
                    </select>
                </div>

                <!-- Price Range Filter -->
                <div class="filter-section">
                    <h4><i class="fas fa-rupee-sign"></i> Price Range</h4>
                    <div class="price-inputs">
                        <input type="number" id="minPrice" placeholder="Min" onchange="filterProducts()">
                        <span class="price-separator">to</span>
                        <input type="number" id="maxPrice" placeholder="Max" onchange="filterProducts()">
                    </div>
                </div>

                <!-- Sort Filter -->
                <div class="filter-section">
                    <h4><i class="fas fa-sort"></i> Sort By</h4>
                    <select id="sortBy" onchange="sortProducts()">
                        <option value="name-asc">Name (A-Z)</option>
                        <option value="name-desc">Name (Z-A)</option>
                        <option value="price-asc">Price (Low to High)</option>
                        <option value="price-desc">Price (High to Low)</option>
                    </select>
                </div>
            </aside>

            <!-- Main Content Area -->
            <main class="products-main">
                <div class="products-header">
                    <h2>Our Collections</h2>
                </div>

                <!-- Products Grid -->
                <div class="products-grid" id="productsGrid">
                    <% if (products && products.length > 0) { %>
                        <% products.forEach((product, index) => { %>
                            <% 
                            let minPrice = 0;
                            let maxPrice = 0;
                            let totalQuantity = 0;

                            if (product.variants && product.variants.length > 0) {
                                const prices = product.variants.map(v => v.salePrice);
                                minPrice = Math.min(...prices);
                                maxPrice = Math.max(...prices);
                                totalQuantity = product.variants.reduce((sum, v) => sum + v.variantQuantity, 0);
                            }
                            %>
                            <div class="product-card modern" data-id="<%= product._id %>"
                                data-name="<%= product.productName %>"
                                data-price="<%= minPrice %>"
                                data-original-price="<%= product.variants && product.variants.length > 0 ? Math.min(...product.variants.map(v => v.variantPrice)) : 0 %>"
                                data-sale-price="<%= minPrice %>"
                                data-category="<%= product.category ? product.category._id : '' %>"
                                data-category-name="<%= product.category ? product.category.name : 'Uncategorized' %>"
                                data-image="<%= product.images && product.images.length > 0 ? product.images[0] : 'https://images.unsplash.com/photo-1549298916-b41d501d3772?w=300&h=200&fit=crop' %>"
                                data-description="<%= product.description || '' %>"
                                data-quantity="<%= totalQuantity %>"
                                data-status="<%= product.status || 'Available' %>"
                                data-brand="<%= product.brand || '' %>"
                                data-color="<%= product.color || '' %>"
                                data-product-offer="<%= product.productOffer || 0 %>"
                                data-rating="<%= product.ratings && product.ratings.average ? product.ratings.average : 4.5 %>"
                                data-rating-count="<%= product.ratings && product.ratings.count ? product.ratings.count : 0 %>"
                                onclick="<%= typeof user !== 'undefined' && user ? `window.location.href='/product/${product._id}'` : 'redirectToLogin()' %>" 
                                style="cursor: pointer;">

                                <div class="product-image-container">
                                    <div class="product-image">
                                        <% if (product.images && product.images.length > 0) { %>
                                            <img src="<%= product.images[0] %>" alt="<%= product.productName %>">
                                        <% } else { %>
                                            <img src="https://via.placeholder.com/280x280/f8f9fa/dee2e6?text=No+Image" alt="<%= product.productName %>">
                                        <% } %>
                                    </div>

                                    <!-- Badges -->
                                    <% if (product.productOffer && product.productOffer > 0) { %>
                                        <div class="offer-badge">
                                            <%= product.productOffer %>% OFF
                                        </div>
                                    <% } %>

                                    <div class="stock-badge <%= product.status === 'Available' || totalQuantity > 0 ? 'in-stock' : 'out-of-stock' %>">
                                        <%= product.status === 'Available' || totalQuantity > 0 ? 'Available' : 'Out of Stock' %>
                                    </div>

                                    <!-- FIXED: Wishlist Button with Proper Default State -->
                                    <div class="wishlist-btn" 
                                         onclick="event.stopPropagation(); toggleWishlist('<%= product._id %>', this)" 
                                         data-product-id="<%= product._id %>" 
                                         data-in-wishlist="false">
                                        <i class="far fa-heart"></i>
                                    </div>

                                    <!-- Quick Actions -->
                                    <div class="quick-actions">
                                        <% if (product.status !== 'out of stock' && totalQuantity > 0) { %>
                                            <button class="quick-action-btn" onclick="event.stopPropagation(); addToCart('<%= product._id %>')" title="Add to Cart">
                                                <i class="fas fa-shopping-cart"></i>
                                            </button>
                                        <% } %>
                                        <% if (typeof user !== 'undefined' && user) { %>
                                            <button class="quick-action-btn" onclick="event.stopPropagation(); window.location.href='/product/<%= product._id %>'" title="Quick View">
                                                <i class="fas fa-eye"></i>
                                            </button>
                                        <% } %>
                                    </div>
                                </div>

                                <div class="product-info">
                                    <h3 class="product-name"><%= product.productName %></h3>
                                    <p class="product-category"><%= product.category ? product.category.name : 'Uncategorized' %></p>
                                    
                                    <div class="product-rating">
                                        <div class="stars">
                                            <% if (product.ratings && product.ratings.average > 0) { %>
                                                <% const rating = product.ratings.average; %>
                                                <% for (let i = 1; i <= 5; i++) { %>
                                                    <% if (i <= Math.floor(rating)) { %>
                                                        <i class="fas fa-star"></i>
                                                    <% } else if (i - 0.5 <= rating) { %>
                                                        <i class="fas fa-star-half-alt"></i>
                                                    <% } else { %>
                                                        <i class="far fa-star"></i>
                                                    <% } %>
                                                <% } %>
                                            <% } else { %>
                                                <i class="far fa-star"></i><i class="far fa-star"></i><i class="far fa-star"></i><i class="far fa-star"></i><i class="far fa-star"></i>
                                            <% } %>
                                        </div>
                                        <span class="rating-text">(<%= product.ratings && product.ratings.count ? product.ratings.count : 0 %>)</span>
                                    </div>

                                    <div class="product-price">
                                        <% if (product.variants && product.variants.length > 0) { %>
                                            <%
                                                const prices = product.variants.map(v => v.salePrice);
                                                const originalPrices = product.variants.map(v => v.variantPrice);
                                                const minSalePrice = Math.min(...prices);
                                                const minOriginalPrice = Math.min(...originalPrices);
                                                const hasDiscount = minSalePrice < minOriginalPrice;
                                            %>
                                            <span class="current-price">₹<%= minSalePrice %></span>
                                            <% if (hasDiscount) { %>
                                                <span class="original-price">₹<%= minOriginalPrice %></span>
                                            <% } %>
                                        <% } else { %>
                                            <span class="current-price">Price not available</span>
                                        <% } %>
                                    </div>
                                </div>
                            </div>
                        <% }); %>
                    <% } else { %>
                        <div class="no-products">
                            <i class="fas fa-search"></i>
                            <h3>No products found</h3>
                            <p>Try adjusting your filters or check back later.</p>
                        </div>
                    <% } %>
                </div>
            </main>
        </div>
    </section>

    <!-- Why Choose Us Section -->
    <section class="why-choose-us">
        <div class="container">
            <h2 class="section-title">Why Choose Us</h2>
            <div class="features-grid">
                <div class="feature-card">
                    <div class="feature-icon">
                        <i class="fas fa-shipping-fast"></i>
                    </div>
                    <div class="feature-content">
                        <h3>Free Shipping</h3>
                        <p>Enjoy free shipping on all orders over ₹100. Fast and reliable delivery to your doorstep.</p>
                    </div>
                </div>

                <div class="feature-card">
                    <div class="feature-icon">
                        <i class="fas fa-shield-alt"></i>
                    </div>
                    <div class="feature-content">
                        <h3>Secure Payment</h3>
                        <p>Your transactions are protected with bank-level security and encrypted payment processing.</p>
                    </div>
                </div>

                <div class="feature-card">
                    <div class="feature-icon">
                        <i class="fas fa-undo-alt"></i>
                    </div>
                    <div class="feature-content">
                        <h3>Easy Returns</h3>
                        <p>30-day hassle-free returns. Not satisfied? Send it back for a full refund.</p>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Footer -->
    <%- include("../partials/user/userfooter") %>


    <script>
            async function addToCart(productId, size = null) {
            try {
                const response = await fetch('/cart/add', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ 
                        productId: productId,
                        size: size,
                        quantity: 1
                    })
                });

                const data = await response.json();

                if (data.success) {
                    // Update cart count in navbar
                    updateCartCount(data.cartCount);
                    showNotification('Product added to cart successfully!');
                } else {
                    showNotification(data.message || 'Error adding product to cart');
                }
            } catch (error) {
                console.error('Error adding to cart:', error);
                showNotification('Error adding product to cart. Please try again.');
            }
        }

        // Update cart count in navbar
        function updateCartCount(change) {
            const cartCountElem = document.getElementById('cartCount');
            if (cartCountElem) {
                const currentCount = parseInt(cartCountElem.textContent) || 0;
                const newCount = Math.max(0, change);
                cartCountElem.textContent = newCount;
                
                // Add animation to cart icon
                const cartIcon = cartCountElem.closest('.cart-icon');
                if (cartIcon) {
                    cartIcon.style.animation = 'cartBounce 0.5s ease';
                    setTimeout(() => {
                        cartIcon.style.animation = '';
                    }, 500);
                }
            }
        }

        // Enhanced wishlist functionality
        async function toggleWishlist(productId, element) {
            const heartIcon = element.querySelector('i');
            const isInWishlist = heartIcon.classList.contains('fas');

            try {
                const response = await fetch('/wishlist/toggle', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ productId: productId })
                });

                const data = await response.json();

                if (data.success) {
                    if (data.action === 'added') {
                        heartIcon.classList.remove('far');
                        heartIcon.classList.add('fas');
                        heartIcon.style.color = '#ff4757';
                        updateWishlistCount(1);
                        showNotification('Added to wishlist!');
                    } else if (data.action === 'removed') {
                        heartIcon.classList.remove('fas');
                        heartIcon.classList.add('far');
                        heartIcon.style.color = '';
                        updateWishlistCount(-1);
                        showNotification('Removed from wishlist!');
                    }
                } else {
                    showNotification(data.message || 'Error updating wishlist');
                }
            } catch (error) {
                console.error('Error toggling wishlist:', error);
                showNotification('Error updating wishlist. Please try again.');
            }
        }

        function updateWishlistCount(change) {
            const wishlistCountElem = document.getElementById('wishlistCount');
            if (wishlistCountElem) {
                const currentCount = parseInt(wishlistCountElem.textContent) || 0;
                const newCount = Math.max(0, currentCount + change);
                wishlistCountElem.textContent = newCount;
            }
        }
    </script>

    <!-- COMPLETELY REWRITTEN JavaScript for Proper State Management -->
    <script>
        // ROBUST localStorage Manager with Debugging
       


        // Product filtering and sorting functions (unchanged)
        const allProductCards = document.querySelectorAll('.product-card');

        function filterProducts() {
            const searchQuery = document.getElementById('searchInput').value.toLowerCase().trim();
            const category = document.getElementById('category').value;
            const minPrice = parseFloat(document.getElementById('minPrice').value) || 0;
            const maxPrice = parseFloat(document.getElementById('maxPrice').value) || Infinity;

            let visibleCount = 0;

            allProductCards.forEach(card => {
                const productName = card.dataset.name.toLowerCase();
                const productCategory = card.dataset.category;
                const productPrice = parseFloat(card.dataset.price) || 0;

                const matchesSearch = !searchQuery || productName.includes(searchQuery);
                const matchesCategory = !category || productCategory === category;
                const matchesPrice = productPrice >= minPrice && productPrice <= maxPrice;

                if (matchesSearch && matchesCategory && matchesPrice) {
                    card.style.display = 'block';
                    visibleCount++;
                } else {
                    card.style.display = 'none';
                }
            });

            showNoResultsMessage(searchQuery, visibleCount);
            updateFilterHighlighting();
        }

        function sortProducts() {
            const sortBy = document.getElementById('sortBy').value;
            const grid = document.getElementById('productsGrid');
            const productCards = Array.from(grid.querySelectorAll('.product-card:not([style*="display: none"])'));

            productCards.sort((a, b) => {
                switch (sortBy) {
                    case 'name-asc':
                        return a.dataset.name.localeCompare(b.dataset.name);
                    case 'name-desc':
                        return b.dataset.name.localeCompare(a.dataset.name);
                    case 'price-asc':
                        return parseFloat(a.dataset.price) - parseFloat(b.dataset.price);
                    case 'price-desc':
                        return parseFloat(b.dataset.price) - parseFloat(a.dataset.price);
                    default:
                        return 0;
                }
            });

            productCards.forEach(card => card.remove());
            productCards.forEach(card => grid.appendChild(card));
        }

        function updateFilterHighlighting() {
            const searchInput = document.getElementById('searchInput');
            const categorySelect = document.getElementById('category');
            const minPriceInput = document.getElementById('minPrice');
            const maxPriceInput = document.getElementById('maxPrice');

            if (searchInput) {
                const searchGroup = searchInput.closest('.filter-section');
                if (searchInput.value.trim()) {
                    searchGroup?.classList.add('filter-active');
                } else {
                    searchGroup?.classList.remove('filter-active');
                }
            }

            if (categorySelect) {
                const categoryGroup = categorySelect.closest('.filter-section');
                if (categorySelect.value) {
                    categoryGroup?.classList.add('filter-active');
                } else {
                    categoryGroup?.classList.remove('filter-active');
                }
            }

            if (minPriceInput && maxPriceInput) {
                const priceGroup = minPriceInput.closest('.filter-section');
                if (minPriceInput.value || maxPriceInput.value) {
                    priceGroup?.classList.add('filter-active');
                } else {
                    priceGroup?.classList.remove('filter-active');
                }
            }
        }

        function showNoResultsMessage(searchQuery, visibleCount) {
            const productsGrid = document.querySelector('.products-grid');
            const existingMessage = document.querySelector('.no-results-message');

            if (existingMessage) {
                existingMessage.remove();
            }

            if (visibleCount === 0) {
                const messageDiv = document.createElement('div');
                messageDiv.className = 'no-results-message';

                let messageText = 'No products found';
                if (searchQuery) {
                    messageText = `No products found for "${searchQuery}"`;
                }

                messageDiv.innerHTML = `
                    <div class="no-results-content">
                        <i class="fas fa-search"></i>
                        <h3>${messageText}</h3>
                        <p>Try adjusting your search terms or filters</p>
                        <button onclick="clearFilters()" class="clear-search-btn">
                            <i class="fas fa-times"></i>
                            Clear All Filters
                        </button>
                    </div>
                `;

                productsGrid.appendChild(messageDiv);
            }
        }

        function clearFilters() {
            const searchInput = document.getElementById('searchInput');
            const categorySelect = document.getElementById('category');
            const minPriceInput = document.getElementById('minPrice');
            const maxPriceInput = document.getElementById('maxPrice');
            const sortBySelect = document.getElementById('sortBy');

            if (searchInput) searchInput.value = '';
            if (categorySelect) categorySelect.value = '';
            if (minPriceInput) minPriceInput.value = '';
            if (maxPriceInput) maxPriceInput.value = '';
            if (sortBySelect) sortBySelect.value = 'name-asc';

            document.querySelectorAll('.filter-section').forEach(group => {
                group.classList.remove('filter-active');
            });

            allProductCards.forEach(card => {
                card.style.display = 'block';
            });

            const existingMessage = document.querySelector('.no-results-message');
            if (existingMessage) {
                existingMessage.remove();
            }
        }

        function showNotification(message, type = 'success') {
            // Remove existing notifications
            const existing = document.querySelectorAll('.notification');
            existing.forEach(n => n.remove());

            const notification = document.createElement('div');
            notification.className = `notification ${type}`;
            notification.innerHTML = `
                <i class="fas ${type === 'success' ? 'fa-check-circle' : 'fa-exclamation-circle'}"></i>
                <span>${message}</span>
            `;
            document.body.appendChild(notification);

            setTimeout(() => {
                notification.style.animation = 'slideOut 0.3s ease forwards';
                setTimeout(() => {
                    notification.remove();
                }, 300);
            }, 2700);
        }

        function redirectToLogin() {
            alert('Please login to access this feature');
            window.location.href = '/login';
            return false;
        }

       

            // Set up filter event listeners
            const searchInput = document.getElementById('searchInput');
            const categorySelect = document.getElementById('category');
            const minPriceInput = document.getElementById('minPrice');
            const maxPriceInput = document.getElementById('maxPrice');

            if (searchInput) {
                searchInput.addEventListener('input', filterProducts);
            }
            if (categorySelect) {
                categorySelect.addEventListener('change', filterProducts);
            }
            if (minPriceInput) {
                minPriceInput.addEventListener('input', filterProducts);
            }
            if (maxPriceInput) {
                maxPriceInput.addEventListener('input', filterProducts);
            }

            updateFilterHighlighting();

            // Enhanced storage change listener
            window.addEventListener('storage', function(e) {
                console.log('Storage changed:', e.key, e.newValue);
                
                if (e.key === 'shoezy_wishlist') {
                    setTimeout(() => {
                        WishlistManager.initializeAll();
                    }, 100);
                }
                if (e.key === 'shoezy_cart_count') {
                    NavbarCounters.updateCartCount(StorageManager.getCartCount());
                }
            });

            // Periodic system check every 15 seconds
           
        // Handle page visibility changes
        document.addEventListener('visibilitychange', function() {
            if (!document.hidden) {
                console.log('Page visible again, syncing state...');
                setTimeout(() => {
                    initializeSystem();
                }, 200);
            }
        });

        // Handle page unload to save state
        window.addEventListener('beforeunload', function() {
            console.log('Page unloading, final state check...');
        });
    </script>
</body>

</html>
