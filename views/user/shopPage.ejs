<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shoezy - Premium Footwear Store</title>
    <link rel="stylesheet" href="/css/shopPage.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap"
        rel="stylesheet">
    <style>
        /* CRITICAL: Wishlist Button Color Fix */
        .wishlist-btn i {
            color: #6b7280 !important;
            transition: color 0.3s ease;
        }

        .wishlist-btn.wishlist-active i {
            color: #ef4444 !important;
        }

        .wishlist-btn:hover i {
            color: #ef4444;
        }

        .wishlist-btn.wishlist-active:hover i {
            color: #dc2626;
        }

        /* Notification styles */
        .notification {
            position: fixed;
            top: 20px;
            right: 20px;
            background: linear-gradient(135deg, #10b981, #059669);
            color: white;
            padding: 12px 20px;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
            z-index: 10000;
            animation: slideIn 0.3s ease forwards;
            display: flex;
            align-items: center;
            gap: 8px;
            font-weight: 500;
        }

        .notification.error {
            background: linear-gradient(135deg, #ef4444, #dc2626);
        }

        @keyframes slideIn {
            from {
                transform: translateX(100%);
                opacity: 0;
            }

            to {
                transform: translateX(0);
                opacity: 1;
            }
        }

        @keyframes slideOut {
            from {
                transform: translateX(0);
                opacity: 1;
            }

            to {
                transform: translateX(100%);
                opacity: 0;
            }
        }

        @keyframes cartBounce {

            0%,
            100% {
                transform: scale(1);
            }

            50% {
                transform: scale(1.1);
            }
        }

        /* Enhanced Filter Sidebar with Scroll */
        .filters-sidebar {
            max-height: calc(100vh - 160px);
            overflow-y: auto;
            scrollbar-width: thin;
            scrollbar-color: #cbd5e1 #f1f5f9;
        }

        .filters-sidebar::-webkit-scrollbar {
            width: 6px;
        }

        .filters-sidebar::-webkit-scrollbar-track {
            background: #f1f5f9;
            border-radius: 3px;
        }

        .filters-sidebar::-webkit-scrollbar-thumb {
            background: #cbd5e1;
            border-radius: 3px;
        }

        .filters-sidebar::-webkit-scrollbar-thumb:hover {
            background: #94a3b8;
        }

        /* Enhanced Search Input with Clear Button */
        .search-input-wrapper {
            position: relative;
        }

        .search-input-wrapper input {
            padding-left: 2.5rem;
            padding-right: 2.5rem;
        }

        .search-icon {
            position: absolute;
            left: 0.75rem;
            top: 50%;
            transform: translateY(-50%);
            color: #9ca3af;
            font-size: 0.9rem;
            pointer-events: none;
        }

        .search-clear-btn {
            position: absolute;
            right: 0.5rem;
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            color: #9ca3af;
            font-size: 0.9rem;
            cursor: pointer;
            padding: 0.25rem;
            border-radius: 50%;
            width: 24px;
            height: 24px;
            display: none;
            align-items: center;
            justify-content: center;
            transition: all 0.2s ease;
        }

        .search-clear-btn:hover {
            background: #f3f4f6;
            color: #6b7280;
        }

        .search-clear-btn.show {
            display: flex;
        }

        /* Enhanced No Results Message */
        .no-results-message {
            grid-column: 1 / -1;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 400px;
            background: #fafbfc;
            border-radius: 16px;
            border: 2px dashed #e5e7eb;
            margin: 0;
        }

        /* Stable Grid Layout */
        .products-grid {
            min-height: 400px;
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 2rem;
            margin-top: 2rem;
            width: 100%;
        }

        /* Mobile Responsive Adjustments */
        @media (max-width: 1200px) {
            .products-grid {
                grid-template-columns: repeat(2, 1fr);
            }
        }

        @media (max-width: 768px) {
            .products-grid {
                grid-template-columns: 1fr;
            }

            .filters-sidebar {
                max-height: none;
                overflow-y: visible;
            }
        }

        /* Pagination Styles */
        .pagination-container {
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 2rem 0;
            width: 100%;
        }

        .pagination {
            display: flex;
            list-style: none;
            padding: 0;
            margin: 0;
            border-radius: 0.5rem;
            overflow: hidden;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .page-item {
            margin: 0;
        }

        .page-link {
            display: block;
            padding: 0.75rem 1rem;
            color: #4b5563;
            background-color: #ffffff;
            border-left: 1px solid #e5e7eb;
            text-decoration: none;
            transition: background-color 0.2s ease, color 0.2s ease;
            font-weight: 500;
        }

        .page-item:first-child .page-link {
            border-top-left-radius: 0.5rem;
            border-bottom-left-radius: 0.5rem;
            border-left: 0;
        }

        .page-item:last-child .page-link {
            border-top-right-radius: 0.5rem;
            border-bottom-right-radius: 0.5rem;
        }

        .page-link:hover {
            background-color: #f3f4f6;
            color: #1f2937;
        }

        .page-item.active .page-link {
            background-color: #10b981;
            color: #ffffff;
            border-color: #10b981;
            cursor: default;
        }

        .page-item.active .page-link:hover {
            background-color: #059669;
        }

        .page-item.disabled .page-link {
            color: #9ca3af;
            pointer-events: none;
            background-color: #f9fafb;
        }
    </style>
</head>

<body>
    <!-- Enhanced Navbar with Perfect Badge Alignment -->
    <%- include('../partials/user/navbar') %>

        <!-- Hero Section -->
        <section class="hero-section">
            <div class="hero-overlay"></div>
            <div class="hero-content">
                <div class="hero-text">
                    <h1>Step Into Style</h1>
                    <p>Discover our premium collection of footwear designed for comfort and elegance</p>
                    <button class="hero-cta-btn"
                        onclick="document.getElementById('shop').scrollIntoView({behavior: 'smooth'})">
                        <i class="fas fa-shopping-bag"></i>
                        Shop Collection
                    </button>
                </div>
            </div>
        </section>

        <!-- Main Shop Section -->
        <section class="main-shop-section" id="shop">
            <div class="shop-container">
                <!-- Sidebar Filters with Scroll -->
                <aside class="filters-sidebar">
                    <div class="sidebar-header">
                        <h3><i class="fas fa-filter"></i> Filters</h3>
                        <button class="clear-all-btn" onclick="clearFilters()">
                            <i class="fas fa-times"></i>
                            Clear All
                        </button>
                    </div>

                    <!-- Enhanced Search Filter with Clear Button -->
                    <div class="filter-section">
                        <h4><i class="fas fa-search"></i> Search Products</h4>
                        <div class="search-input-wrapper">
                            <input type="text" id="searchInput" placeholder="Search products..." autocomplete="off">
                            <i class="fas fa-search search-icon"></i>
                            <button type="button" class="search-clear-btn" id="searchClearBtn" onclick="clearSearch()">
                                <i class="fas fa-times"></i>
                            </button>
                        </div>
                    </div>

                    <!-- Category Filter -->
                    <div class="filter-section">
                        <h4><i class="fas fa-tags"></i> Category</h4>
                        <select id="category">
                            <option value="">All Categories</option>
                            <% if (categories && categories.length> 0) { %>
                                <% categories.forEach(category=> { %>
                                    <option value="<%= category._id %>">
                                        <%= category.name %>
                                    </option>
                                    <% }); %>
                                        <% } %>
                        </select>
                    </div>

                    <!-- Price Range Filter -->
                    <div class="filter-section">
                        <h4><i class="fas fa-rupee-sign"></i> Price Range</h4>
                        <div class="price-inputs">
                            <input type="number" id="minPrice" placeholder="Min">
                            <span class="price-separator">to</span>
                            <input type="number" id="maxPrice" placeholder="Max">
                        </div>
                    </div>

                    <!-- Sort Filter -->
                    <div class="filter-section">
                        <h4><i class="fas fa-sort"></i> Sort By</h4>
                        <select id="sortBy">
                            <option value="name-asc">Name (A-Z)</option>
                            <option value="name-desc">Name (Z-A)</option>
                            <option value="price-asc">Price (Low to High)</option>
                            <option value="price-desc">Price (High to Low)</option>
                        </select>
                    </div>
                </aside>

                <!-- Main Content Area -->
                <main class="products-main">
                    <div class="products-header">
                        <h2>Our Collections</h2>
                    </div>

                    <!-- Products Grid with Stable Layout -->
                    <div class="products-grid" id="productsGrid">
                        <% if (products && products.length> 0) { %>
                            <% products.forEach((product, index)=> { %>
                                <% let minPrice=0; let maxPrice=0; let totalQuantity=0; if (product.variants &&
                                    product.variants.length> 0) {
                                    const prices = product.variants.map(v => v.salePrice);
                                    minPrice = Math.min(...prices);
                                    maxPrice = Math.max(...prices);
                                    totalQuantity = product.variants.reduce((sum, v) => sum + v.variantQuantity, 0);
                                    }
                                    %>
                                    <div class="product-card modern" data-id="<%= product._id %>"
                                        data-name="<%= product.productName %>" data-price="<%= minPrice %>"
                                        data-original-price="<%= product.variants && product.variants.length > 0 ? Math.min(...product.variants.map(v => v.variantPrice)) : 0 %>"
                                        data-sale-price="<%= minPrice %>"
                                        data-category="<%= product.category ? product.category._id : '' %>"
                                        data-category-name="<%= product.category ? product.category.name : 'Uncategorized' %>"
                                        data-image="<%= product.images && product.images.length > 0 ? product.images[0] : 'https://images.unsplash.com/photo-1549298916-b41d501d3772?w=300&h=200&fit=crop' %>"
                                        data-description="<%= product.description || '' %>"
                                        data-quantity="<%= totalQuantity %>"
                                        data-status="<%= product.status || 'Available' %>"
                                        data-brand="<%= product.brand || '' %>" data-color="<%= product.color || '' %>"
                                        data-product-offer="<%= product.bestOffer || 0 %>"
                                        data-rating="<%= product.ratings && product.ratings.average ? product.ratings.average : 4.5 %>"
                                        data-rating-count="<%= product.ratings && product.ratings.count ? product.ratings.count : 0 %>"
                                        onclick="<%= typeof user !== 'undefined' && user ? `window.location.href='/product/${product._id}'` : 'redirectToLogin()' %>"
                                        style="cursor: pointer;">

                                        <div class="product-image-container">
                                            <div class="product-image">
                                                <% if (product.images && product.images.length> 0) { %>
                                                    <img src="<%= product.images[0] %>"
                                                        alt="<%= product.productName %>">
                                                    <% } else { %>
                                                        <img src="https://via.placeholder.com/280x280/f8f9fa/dee2e6?text=No+Image"
                                                            alt="<%= product.productName %>">
                                                        <% } %>
                                            </div>

                                            <!-- Badges -->
                                            <% if (product.bestOffer && product.bestOffer> 0) { %>
                                                <div class="offer-badge">
                                                    <%= product.bestOffer %>% OFF
                                                </div>
                                                <% } %>

                                                    <div
                                                        class="stock-badge <%= product.status === 'Available' || totalQuantity > 0 ? 'in-stock' : 'out-of-stock' %>">
                                                        <%= product.status==='Available' || totalQuantity> 0 ?
                                                            'Available' : 'Out of Stock' %>
                                                    </div>

                                                    <!-- Enhanced Wishlist Button with Proper Toggle -->
                                                    <div class="wishlist-btn <%= wishlistItems.includes(product._id.toString()) ? 'wishlist-active' : '' %>"
                                                        onclick="event.stopPropagation(); toggleWishlist('<%= product._id %>', this)"
                                                        data-product-id="<%= product._id %>">
                                                        <i
                                                            class="<%= wishlistItems.includes(product._id.toString()) ? 'fas' : 'far' %> fa-heart"></i>
                                                    </div>

                                                    <!-- Quick Actions -->
                                                    <div class="quick-actions">
                                                        <% if (product.status !=='out of stock' && totalQuantity> 0) {
                                                            %>
                                                            <button class="quick-action-btn"
                                                                onclick="event.stopPropagation(); addToCart('<%= product._id %>')"
                                                                title="Add to Cart">
                                                                <i class="fas fa-shopping-cart"></i>
                                                            </button>
                                                            <% } %>
                                                                <% if (typeof user !=='undefined' && user) { %>
                                                                    <button class="quick-action-btn"
                                                                        onclick="event.stopPropagation(); window.location.href='/product/<%= product._id %>'"
                                                                        title="Quick View">
                                                                        <i class="fas fa-eye"></i>
                                                                    </button>
                                                                    <% } %>
                                                    </div>
                                        </div>

                                        <div class="product-info">
                                            <h3 class="product-name">
                                                <%= product.productName %>
                                            </h3>
                                            <p class="product-category">
                                                <%= product.category ? product.category.name : 'Uncategorized' %>
                                            </p>

                                            <div class="product-rating">
                                                <div class="stars">
                                                    <% const rating=product.ratings && product.ratings.average ?
                                                        product.ratings.average : 4.5; %>
                                                        <% for (let i=1; i <=5; i++) { %>
                                                            <% if (i <=Math.floor(rating)) { %>
                                                                <i class="fas fa-star"></i>
                                                                <% } else if (i - 0.5 <=rating) { %>
                                                                    <i class="fas fa-star-half-alt"></i>
                                                                    <% } else { %>
                                                                        <i class="far fa-star"></i>
                                                                        <% } %>
                                                                            <% } %>
                                                </div>

                                                <% const price=product.variants && product.variants.length> 0
                                                    ? Number(product.variants[0].salePrice)
                                                    : 0; // fallback if no variants

                                                    let ratingCount = product.ratings && product.ratings.count
                                                    ? product.ratings.count
                                                    : (price > 13000 ? 899 : price > 10000 ? 678 : 546);
                                                    %>

                                                    <span class="rating-text">(<%= ratingCount %> reviews)</span>
                                            </div>


                                            <div class="product-price">
                                                <% if (product.variants && product.variants.length> 0) { %>
                                                    <% const availableVariants=product.variants.filter(v=>
                                                        v.variantQuantity > 0);
                                                        const variantsToConsider = availableVariants.length > 0 ?
                                                        availableVariants : product.variants;
                                                        const prices = variantsToConsider.map(v => v.salePrice);
                                                        const originalPrices = variantsToConsider.map(v =>
                                                        v.regularPrice);
                                                        const minSalePrice = Math.min(...prices);
                                                        const minOriginalPrice = Math.min(...originalPrices);
                                                        const hasDiscount = minSalePrice < minOriginalPrice; %>
                                                            <span class="current-price">₹<%=
                                                                    minSalePrice.toLocaleString('en-IN') %></span>
                                                            <% if (hasDiscount) { %>
                                                                <span class="original-price"
                                                                    style="text-decoration: line-through; color: #c22626; margin-left: 5px;">₹
                                                                    <%= minOriginalPrice.toLocaleString('en-IN') %>
                                                                        </span>
                                                                <% } %>
                                                                    <% } else { %>
                                                                        <span class="current-price">Price not
                                                                            available</span>
                                                                        <% } %>
                                            </div>


                                        </div>
                                    </div>
                                    <% }); %>
                                        <% } else { %>
                                            <div class="no-results-message">
                                                <div class="no-results-content">
                                                    <i class="fas fa-search"></i>
                                                    <h3>No products found</h3>
                                                    <p>Try adjusting your filters or check back later.</p>
                                                </div>
                                            </div>
                                            <% } %>
                    </div>

                    <!-- Pagination -->
                    <% if (typeof totalPages !=='undefined' && totalPages> 1) { %>
                        <div class="pagination-container">
                            <ul class="pagination">
                                <% if (typeof hasPrevPage !=='undefined' && hasPrevPage) { %>
                                    <li class="page-item">
                                        <a class="page-link"
                                            href="?page=<%= prevPage %>&search=<%= query.search || '' %>&category=<%= query.category || '' %>&minPrice=<%= query.minPrice || '' %>&maxPrice=<%= query.maxPrice || '' %>&sortBy=<%= query.sortBy || '' %>"
                                            aria-label="Previous">
                                            <span aria-hidden="true">&laquo;</span>
                                        </a>
                                    </li>
                                    <% } else { %>
                                        <li class="page-item disabled">
                                            <span class="page-link">&laquo;</span>
                                        </li>
                                        <% } %>

                                            <% for (let i=1; i <=totalPages; i++) { %>
                                                <% if (i===currentPage) { %>
                                                    <li class="page-item active">
                                                        <span class="page-link">
                                                            <%= i %>
                                                        </span>
                                                    </li>
                                                    <% } else { %>
                                                        <li class="page-item">
                                                            <a class="page-link"
                                                                href="?page=<%= i %>&search=<%= query.search || '' %>&category=<%= query.category || '' %>&minPrice=<%= query.minPrice || '' %>&maxPrice=<%= query.maxPrice || '' %>&sortBy=<%= query.sortBy || '' %>">
                                                                <%= i %>
                                                            </a>
                                                        </li>
                                                        <% } %>
                                                            <% } %>

                                                                <% if (typeof hasNextPage !=='undefined' && hasNextPage)
                                                                    { %>
                                                                    <li class="page-item">
                                                                        <a class="page-link"
                                                                            href="?page=<%= nextPage %>&search=<%= query.search || '' %>&category=<%= query.category || '' %>&minPrice=<%= query.minPrice || '' %>&maxPrice=<%= query.maxPrice || '' %>&sortBy=<%= query.sortBy || '' %>"
                                                                            aria-label="Next">
                                                                            <span aria-hidden="true">&raquo;</span>
                                                                        </a>
                                                                    </li>
                                                                    <% } else { %>
                                                                        <li class="page-item disabled">
                                                                            <span class="page-link">&raquo;</span>
                                                                        </li>
                                                                        <% } %>
                            </ul>
                        </div>
                        <% } %>
                </main>
            </div>
        </section>

        <!-- Why Choose Us Section -->
        <section class="why-choose-us">
            <div class="container">
                <h2 class="section-title">Why Choose Us</h2>
                <div class="features-grid">
                    <div class="feature-card">
                        <div class="feature-icon">
                            <i class="fas fa-shipping-fast"></i>
                        </div>
                        <div class="feature-content">
                            <h3>Free Shipping</h3>
                            <p>Enjoy free shipping on all orders over ₹100. Fast and reliable delivery to your doorstep.
                            </p>
                        </div>

                    </div>

                    <div class="feature-card">
                        <div class="feature-icon">
                            <i class="fas fa-shield-alt"></i>
                        </div>
                        <div class="feature-content">
                            <h3>Secure Payment</h3>
                            <p>Your transactions are protected with bank-level security and encrypted payment
                                processing.</p>
                        </div>
                    </div>

                    <div class="feature-card">
                        <div class="feature-icon">
                            <i class="fas fa-undo-alt"></i>
                        </div>
                        <div class="feature-content">
                            <h3>Easy Returns</h3>
                            <p>30-day hassle-free returns. Not satisfied? Send it back for a full refund.</p>
                        </div>
                    </div>
                    <div class="feature-card">
                        <div class="feature-icon">
                            <i class="fas fa-headset"></i>
                        </div>
                        <div class="feature-content">
                            <h3>24/7 Support</h3>
                            <p>Our customer service team is available round the clock to help with any questions.</p>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- Footer -->
        <%- include("../partials/user/userfooter") %>

            <script>
                // Global variable to store current wishlist state
                let currentWishlistItems = new Set();

                // Initialize wishlist state on page load
                document.addEventListener('DOMContentLoaded', function () {
                    const urlParams = new URLSearchParams(window.location.search);
                    const query = {
                        search: urlParams.get('search') || '',
                        category: urlParams.get('category') || '',
                        minPrice: urlParams.get('minPrice') || '',
                        maxPrice: urlParams.get('maxPrice') || '',
                        sortBy: urlParams.get('sortBy') || 'name-asc'
                    };

                    document.getElementById('searchInput').value = query.search;
                    document.getElementById('category').value = query.category;
                    document.getElementById('minPrice').value = query.minPrice;
                    document.getElementById('maxPrice').value = query.maxPrice;
                    document.getElementById('sortBy').value = query.sortBy;

                    initializeWishlistState();
                    setupSearchClearButton();
                });

                // Enhanced search clear button functionality
                function setupSearchClearButton() {
                    const searchInput = document.getElementById('searchInput');
                    const clearBtn = document.getElementById('searchClearBtn');

                    if (searchInput && clearBtn) {
                        searchInput.addEventListener('input', function () {
                            if (this.value.trim().length > 0) {
                                clearBtn.classList.add('show');
                            } else {
                                clearBtn.classList.remove('show');
                            }
                        });
                    }
                }

                function clearSearch() {
                    const searchInput = document.getElementById('searchInput');
                    const clearBtn = document.getElementById('searchClearBtn');

                    if (searchInput) {
                        searchInput.value = '';
                        searchInput.focus();
                        clearBtn.classList.remove('show');
                        filterAndSort(); // Trigger filter update
                    }
                }

                // Function to initialize wishlist state
                async function initializeWishlistState() {
                    try {
                        const response = await fetch('/wishlist/status');
                        if (!response.ok) {
                            return;
                        }

                        const data = await response.json();

                        if (data.success && data.wishlistItems) {
                            // Clear current state
                            currentWishlistItems.clear();

                            // Update global state
                            data.wishlistItems.forEach(productId => {
                                currentWishlistItems.add(productId);
                            });

                            // Update UI for all wishlist items
                            data.wishlistItems.forEach(productId => {
                                const wishlistBtn = document.querySelector(`.wishlist-btn[data-product-id="${productId}"]`);
                                if (wishlistBtn) {
                                    setWishlistActive(wishlistBtn, true);
                                }
                            });

                        }
                    } catch (error) {
                        console.error('Could not load wishlist state:', error);
                    }
                }

                // Function to set wishlist button state
                function setWishlistActive(wishlistBtn, isActive) {
                    const heartIcon = wishlistBtn.querySelector('i');

                    if (isActive) {
                        heartIcon.classList.remove('far');
                        heartIcon.classList.add('fas');
                        wishlistBtn.classList.add('wishlist-active');
                    } else {
                        heartIcon.classList.remove('fas');
                        heartIcon.classList.add('far');
                        wishlistBtn.classList.remove('wishlist-active');
                    }
                }

                function updateCartCount(change) {
                    const cartCountElem = document.getElementById('cartCount');
                    if (cartCountElem) {
                        const currentCount = parseInt(cartCountElem.textContent) || 0;
                        const newCount = Math.max(0, change);
                        cartCountElem.textContent = newCount;

                        const cartIcon = cartCountElem.closest('.cart-icon');
                        if (cartIcon) {
                            cartIcon.style.animation = 'cartBounce 0.5s ease';
                            setTimeout(() => {
                                cartIcon.style.animation = '';
                            }, 500);
                        }
                    }
                }

                async function addToCart(productId, size = null) {
                    try {
                        const response = await fetch('/cart/add', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({
                                productId: productId,
                                size: size,
                                quantity: 1
                            })
                        });

                        const data = await response.json();

                        if (response.ok && data.success) {
                            showNotification('Product added to cart successfully!');
                            if (data.cartCount !== undefined) {
                                updateCartCount(data.cartCount);
                            }
                        } else {
                            if (data.message === "User not authenticated") {
                                window.location.href = "/login";
                                return;
                            }
                            showNotification(data.message || 'Error adding product to cart');
                        }
                    } catch (error) {
                        console.error('Error adding to cart:', error);
                        showNotification('Error adding product to cart. Please try again.');
                    }
                }

                function updateWishlistCount(change) {
                    const wishlistCountElem = document.getElementById('wishlistCount');
                    if (wishlistCountElem) {
                        const currentCount = parseInt(wishlistCountElem.textContent) || 0;
                        const newCount = Math.max(0, currentCount + change);
                        wishlistCountElem.textContent = newCount;
                    }
                }

                async function toggleWishlist(productId, element) {
                    // Prevent double-clicking
                    if (element.classList.contains('processing')) {
                        return;
                    }

                    element.classList.add('processing');

                    try {
                        const response = await fetch('/wishlist/toggle', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({ productId: productId })
                        });

                        const data = await response.json();

                        if (data.success) {
                            if (data.action === 'added') {
                                // Update local state
                                currentWishlistItems.add(productId);
                                // Update UI
                                setWishlistActive(element, true);
                                updateWishlistCount(1);
                                showNotification('Added to wishlist!');
                            } else if (data.action === 'removed') {
                                // Update local state
                                currentWishlistItems.delete(productId);
                                // Update UI
                                setWishlistActive(element, false);
                                updateWishlistCount(-1);
                                showNotification('Removed from wishlist!');
                            }
                        } else {
                            if (data.message === "User not authenticated") {
                                window.location.href = "/login";
                                return;
                            }
                            showNotification(data.message || 'Error updating wishlist', 'error');
                        }
                    } catch (error) {
                        console.error('Error toggling wishlist:', error);
                        showNotification('Error updating wishlist. Please try again.', 'error');
                    } finally {
                        element.classList.remove('processing');
                    }
                }

                function filterAndSort() {
                    const search = document.getElementById('searchInput').value.trim();
                    const category = document.getElementById('category').value;
                    const minPrice = document.getElementById('minPrice').value;
                    const maxPrice = document.getElementById('maxPrice').value;
                    const sortBy = document.getElementById('sortBy').value;

                    let url = '/shop?page=1';
                    if (search) url += `&search=${encodeURIComponent(search)}`;
                    if (category) url += `&category=${encodeURIComponent(category)}`;
                    if (minPrice) url += `&minPrice=${encodeURIComponent(minPrice)}`;
                    if (maxPrice) url += `&maxPrice=${encodeURIComponent(maxPrice)}`;
                    if (sortBy) url += `&sortBy=${encodeURIComponent(sortBy)}`;

                    window.location.href = url;
                }

                // Replace old filterProducts and sortProducts with a single function
                const filterInputs = ['searchInput', 'category', 'minPrice', 'maxPrice', 'sortBy'];
                filterInputs.forEach(id => {
                    const input = document.getElementById(id);
                    if (input) {
                        input.addEventListener('change', filterAndSort);
                    }
                });

                function showNotification(message, type = 'success') {
                    const existing = document.querySelectorAll('.notification');
                    existing.forEach(n => n.remove());

                    const notification = document.createElement('div');
                    notification.className = `notification ${type}`;
                    notification.innerHTML = `
                <i class="fas ${type === 'success' ? 'fa-check-circle' : 'fa-exclamation-circle'}"></i>
                <span>${message}</span>
            `;
                    document.body.appendChild(notification);

                    setTimeout(() => {
                        notification.style.animation = 'slideOut 0.3s ease forwards';
                        setTimeout(() => {
                            notification.remove();
                        }, 300);
                    }, 2700);
                }

                function redirectToLogin() {
                    window.location.href = '/login';
                    return false;
                }

                // Re-sync wishlist state when page becomes visible
                document.addEventListener('visibilitychange', function () {
                    if (!document.hidden) {
                        setTimeout(() => {
                            initializeWishlistState();
                        }, 200);
                    }
                });
            </script>
</body>

</html>