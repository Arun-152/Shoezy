<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shoezy - Premium Footwear Store</title>
    <link rel="stylesheet" href="/css/shopPage.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
</head>
<body>
    <!-- Header -->
   <%-include("../partials/user/navbar")%>

    <!-- Hero Section -->
    <section class="hero">
        <div class="hero-content">
            <h2>Step Into Style</h2>
            <p>Discover our premium collection of footwear</p>
            <button class="cta-button">Shop Now</button>
        </div>
        <div class="hero-image">
            <div class="featured-shoe">
                <img src="https://images.unsplash.com/photo-1549298916-b41d501d3772?w=400&h=300&fit=crop" alt="Featured Shoe">
            </div>
        </div>
    </section>

    <!-- Shop Section -->
    <section class="shop-section" id="shop">
        <div class="container">
            <h2 class="section-title">Our Collection</h2>
            
            <!-- Filters -->
            <div class="filters">
                <!-- Search Filter - Positioned at top -->
                <div class="filter-group search-filter">
                    <label for="searchInput">
                        <i class="fas fa-search"></i>
                        Search Products:
                    </label>
                    <div class="search-container">
                        <input type="text" id="searchInput" placeholder="Search products..." autocomplete="off">
                        <i class="fas fa-search search-icon"></i>
                    </div>
                </div>

                <div class="filter-group">
                    <label for="category">Category:</label>
                    <select id="category" onchange="filterProducts()">
                        <option value="">All Categories</option>
                        <% if (categories && categories.length > 0) { %>
                            <% categories.forEach(category => { %>
                                <option value="<%= category._id %>"><%= category.name %></option>
                            <% }); %>
                        <% } %>
                    </select>
                </div>

                <div class="filter-group">
                    <label for="minPrice">Min Price:</label>
                    <input type="number" id="minPrice" placeholder="0" onchange="filterProducts()">
                </div>

                <div class="filter-group">
                    <label for="maxPrice">Max Price:</label>
                    <input type="number" id="maxPrice" placeholder="1000" onchange="filterProducts()">
                </div>

                <div class="filter-group">
                    <label for="sortBy">Sort By:</label>
                    <select id="sortBy" onchange="sortProducts()">
                        <option value="name-asc">Name (A-Z)</option>
                        <option value="name-desc">Name (Z-A)</option>
                        <option value="price-asc">Price (Low to High)</option>
                        <option value="price-desc">Price (High to Low)</option>
                    </select>
                </div>

                <button class="clear-filters" onclick="clearFilters()">Clear Filters</button>
            </div>

            <!-- Products Grid -->
            <div class="products-grid" id="productsGrid">
                <% if (products && products.length > 0) { %>
                    <% products.forEach((product, index) => { %>
                        <% 
                            // Calculate price from variants
                            let minPrice = 0;
                            let maxPrice = 0;
                            let totalQuantity = 0;
                            
                            if (product.variants && product.variants.length > 0) {
                                const prices = product.variants.map(v => v.salePrice);
                                minPrice = Math.min(...prices);
                                maxPrice = Math.max(...prices);
                                totalQuantity = product.variants.reduce((sum, v) => sum + v.variantQuantity, 0);
                            }
                        %>
                        <div class="product-card" 
                             data-id="<%= product._id %>"
                             data-name="<%= product.productName %>"
                             data-price="<%= minPrice %>"
                             data-original-price="<%= product.variants && product.variants.length > 0 ? Math.min(...product.variants.map(v => v.variantPrice)) : 0 %>"
                             data-sale-price="<%= minPrice %>"
                             data-category="<%= product.category ? product.category._id : '' %>"
                             data-category-name="<%= product.category ? product.category.name : 'Uncategorized' %>"
                             data-image="<%= product.images && product.images.length > 0 ? product.images[0] : 'https://images.unsplash.com/photo-1549298916-b41d501d3772?w=300&h=200&fit=crop' %>"
                             data-description="<%= product.description || '' %>"
                             data-quantity="<%= totalQuantity %>"
                             data-status="<%= product.status || 'Available' %>"
                             data-brand="<%= product.brand || '' %>"
                             data-color="<%= product.color || '' %>"
                             data-product-offer="<%= product.productOffer || 0 %>"
                             data-rating="<%= product.ratings && product.ratings.average ? product.ratings.average : 4.5 %>"
                             data-rating-count="<%= product.ratings && product.ratings.count ? product.ratings.count : 0 %>">
                            
                            <div class="product-image-container" style="cursor: pointer;" onclick="window.location.href='/product/<%= product._id %>'">
                                <div class="product-image">
                                    <img src="<%= product.images && product.images.length > 0 ? product.images[0] : 'https://images.unsplash.com/photo-1549298916-b41d501d3772?w=300&h=200&fit=crop' %>" 
                                         alt="<%= product.productName %>" 
                                         onerror="this.src='https://via.placeholder.com/280x280/f8f9fa/dee2e6?text=No+Image'">
                                </div>
                                
                                <% if (product.productOffer && product.productOffer > 0) { %>
                                    <div class="offer-badge"><%= product.productOffer %>% OFF</div>
                                <% } %>
                                
                                <% if (product.status === 'out of stock' || totalQuantity <= 0) { %>
                                    <div class="stock-badge out-of-stock">Out of Stock</div>
                                <% } else { %>
                                    <div class="stock-badge in-stock">Available</div>
                                <% } %>
                                
                                <div class="wishlist-btn" onclick="event.stopPropagation(); toggleWishlist('<%= product._id %>', this)">
                                    <i class="far fa-heart"></i>
                                </div>
                                
                                <div class="product-overlay">
                                    <button class="quick-view-btn" data-id="<%= product._id %>" onclick="event.stopPropagation(); quickView('<%= product._id %>')">
                                        <i class="fas fa-eye"></i> Quick View
                                    </button>
                                </div>
                            </div>
                            
                            <div class="product-info" style="cursor: pointer;" onclick="window.location.href='/product/<%= product._id %>'">
                                <h3 class="product-name"><%= product.productName %></h3>
                                <p class="product-category"><%= product.category ? product.category.name : 'Uncategorized' %></p>
                                
                                <div class="product-rating">
                                    <div class="stars">
                                        <% 
                                            const rating = product.ratings && product.ratings.average ? product.ratings.average : 4.5;
                                            for (let i = 1; i <= 5; i++) {
                                                if (i <= Math.floor(rating)) {
                                        %>
                                                    <i class="fas fa-star"></i>
                                        <%      } else if (i - 0.5 <= rating) { %>
                                                    <i class="fas fa-star-half-alt"></i>
                                        <%      } else { %>
                                                    <i class="far fa-star"></i>
                                        <%      }
                                            }
                                        %>
                                    </div>
                                    <span class="rating-text">(<%= product.ratings && product.ratings.count ? product.ratings.count : 0 %>)</span>
                                </div>
                                
                                <div class="product-price">
                                    <% if (product.variants && product.variants.length > 0) { %>
                                        <% const originalPrice = Math.min(...product.variants.map(v => v.variantPrice)); %>
                                        <% if (originalPrice && originalPrice > minPrice) { %>
                                            <span class="current-price">₹<%= minPrice %></span>
                                            <span class="original-price">₹<%= originalPrice %></span>
                                        <% } else { %>
                                            <span class="current-price">₹<%= minPrice %></span>
                                        <% } %>
                                    <% } else { %>
                                        <span class="current-price">₹0</span>
                                    <% } %>
                                </div>
                                
                                <div class="product-actions">
                                    <% if (product.status === 'out of stock' || totalQuantity <= 0) { %>
                                        <button class="add-to-cart-btn" data-id="<%= product._id %>" disabled onclick="event.stopPropagation()">
                                            <i class="fas fa-shopping-cart"></i>
                                            Out of Stock
                                        </button>
                                    <% } else { %>
                                        <button class="add-to-cart-btn" data-id="<%= product._id %>" onclick="event.stopPropagation(); addToCart('<%= product._id %>')">
                                            <i class="fas fa-shopping-cart"></i>
                                            Add to Cart
                                        </button>
                                    <% } %>
                                </div>
                            </div>
                        </div>
                    <% }); %>
                <% } else { %>
                    <div class="no-products">
                        <h3>No products found</h3>
                        <p>Try adjusting your filters or check back later.</p>
                    </div>
                <% } %>
            </div>
        </div>
    </section>

    <!-- Footer -->
      <%-include("../partials/user/userfooter")%>

    <script>
        // Get all product cards from HTML
        const allProductCards = document.querySelectorAll('.product-card');
        let cart = [];

        // Enhanced filter products with search functionality
        function filterProducts() {
            const searchQuery = document.getElementById('searchInput').value.toLowerCase().trim();
            const category = document.getElementById('category').value;
            const minPrice = parseFloat(document.getElementById('minPrice').value) || 0;
            const maxPrice = parseFloat(document.getElementById('maxPrice').value) || Infinity;

            let visibleCount = 0;

            allProductCards.forEach(card => {
                const productName = card.dataset.name.toLowerCase();
                const productCategory = card.dataset.category;
                const productPrice = parseFloat(card.dataset.price) || 0;

                const matchesSearch = !searchQuery || productName.includes(searchQuery);
                const matchesCategory = !category || productCategory === category;
                const matchesPrice = productPrice >= minPrice && productPrice <= maxPrice;

                if (matchesSearch && matchesCategory && matchesPrice) {
                    card.style.display = 'flex';
                    visibleCount++;
                } else {
                    card.style.display = 'none';
                }
            });

            // Show "Product not found" message if no results
            showNoResultsMessage(searchQuery, visibleCount);

            // Update filter highlighting
            updateFilterHighlighting();
        }

        // Sort products
        function sortProducts() {
            const sortBy = document.getElementById('sortBy').value;
            const grid = document.getElementById('productsGrid');
            const productCards = Array.from(grid.querySelectorAll('.product-card:not([style*="display: none"])'));

            productCards.sort((a, b) => {
                switch(sortBy) {
                    case 'name-asc':
                        return a.dataset.name.localeCompare(b.dataset.name);
                    case 'name-desc':
                        return b.dataset.name.localeCompare(a.dataset.name);
                    case 'price-asc':
                        return parseFloat(a.dataset.price) - parseFloat(b.dataset.price);
                    case 'price-desc':
                        return parseFloat(b.dataset.price) - parseFloat(a.dataset.price);
                    default:
                        return 0;
                }
            });

            // Remove existing cards and re-append in sorted order
            productCards.forEach(card => card.remove());
            productCards.forEach(card => grid.appendChild(card));
        }

        // Update filter highlighting based on active filters
        function updateFilterHighlighting() {
            const searchInput = document.getElementById('searchInput');
            const categorySelect = document.getElementById('category');
            const minPriceInput = document.getElementById('minPrice');
            const maxPriceInput = document.getElementById('maxPrice');

            // Highlight search filter
            const searchGroup = searchInput.closest('.filter-group');
            if (searchInput.value.trim()) {
                searchGroup.classList.add('filter-active');
            } else {
                searchGroup.classList.remove('filter-active');
            }

            // Highlight category filter
            const categoryGroup = categorySelect.closest('.filter-group');
            if (categorySelect.value) {
                categoryGroup.classList.add('filter-active');
            } else {
                categoryGroup.classList.remove('filter-active');
            }

            // Highlight price filters
            const minPriceGroup = minPriceInput.closest('.filter-group');
            const maxPriceGroup = maxPriceInput.closest('.filter-group');

            if (minPriceInput.value) {
                minPriceGroup.classList.add('filter-active');
            } else {
                minPriceGroup.classList.remove('filter-active');
            }

            if (maxPriceInput.value) {
                maxPriceGroup.classList.add('filter-active');
            } else {
                maxPriceGroup.classList.remove('filter-active');
            }
        }

        // Show "Product not found" message
        function showNoResultsMessage(searchQuery, visibleCount) {
            const productsGrid = document.querySelector('.products-grid');
            const existingMessage = document.querySelector('.no-results-message');

            // Remove existing message
            if (existingMessage) {
                existingMessage.remove();
            }

            // Show message only if there are no visible products
            if (visibleCount === 0) {
                const messageDiv = document.createElement('div');
                messageDiv.className = 'no-results-message';

                let messageText = 'No products found';
                if (searchQuery) {
                    messageText = `No products found for "${searchQuery}"`;
                }

                messageDiv.innerHTML = `
                    <div class="no-results-content">
                        <i class="fas fa-search"></i>
                        <h3>${messageText}</h3>
                        <p>Try adjusting your search terms or filters</p>
                        <button onclick="clearFilters()" class="clear-search-btn">
                            <i class="fas fa-times"></i>
                            Clear All Filters
                        </button>
                    </div>
                `;

                productsGrid.appendChild(messageDiv);
            }
        }

        // Enhanced clear filters function
        function clearFilters() {
            document.getElementById('searchInput').value = '';
            document.getElementById('category').value = '';
            document.getElementById('minPrice').value = '';
            document.getElementById('maxPrice').value = '';
            document.getElementById('sortBy').value = 'name-asc';

            // Remove active filter styling
            document.querySelectorAll('.filter-group').forEach(group => {
                group.classList.remove('filter-active');
            });

            // Show all product cards
            allProductCards.forEach(card => {
                card.style.display = 'flex';
            });

            // Remove no results message
            const existingMessage = document.querySelector('.no-results-message');
            if (existingMessage) {
                existingMessage.remove();
            }
        }

        // Add to cart
        function addToCart(productId) {
            const productCard = document.querySelector(`[data-id="${productId}"]`);
            const productName = productCard.dataset.name;
            cart.push({ id: productId, name: productName });
            updateCartCount();
            
            // Show notification
            showNotification(`${productName} added to cart!`);
        }

        // Update cart count
        function updateCartCount() {
            const cartCountElem = document.querySelector('.cart-count');
            if (cartCountElem) cartCountElem.textContent = cart.length;
        }

        // Quick view - Navigate to product detail page
        function quickView(productId) {
            window.location.href = `/product/${productId}`;
        }

        // Toggle wishlist
        function toggleWishlist(productId, element) {
            const heartIcon = element.querySelector('i');

            if (heartIcon.classList.contains('far')) {
                heartIcon.classList.remove('far');
                heartIcon.classList.add('fas');
                showNotification('Added to wishlist!');
            } else {
                heartIcon.classList.remove('fas');
                heartIcon.classList.add('far');
                showNotification('Removed from wishlist!');
            }
        }

        // Show notification
        function showNotification(message) {
            const notification = document.createElement('div');
            notification.className = 'notification';
            notification.innerHTML = `
                <i class="fas fa-check-circle"></i>
                <span>${message}</span>
            `;
            document.body.appendChild(notification);

            setTimeout(() => {
                notification.style.animation = 'slideOut 0.3s ease forwards';
                setTimeout(() => {
                    notification.remove();
                }, 300);
            }, 2700);
        }

        // Initialize
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize cart count if element exists
            updateCartCount();

            // Add real-time search functionality
            document.getElementById('searchInput').addEventListener('input', function() {
                filterProducts();
            });

            // Add event listeners for enhanced filter interactivity
            document.getElementById('category').addEventListener('change', function() {
                filterProducts();
            });

            document.getElementById('minPrice').addEventListener('input', function() {
                filterProducts();
            });

            document.getElementById('maxPrice').addEventListener('input', function() {
                filterProducts();
            });

            // Initialize filter highlighting
            updateFilterHighlighting();
        });
    </script>

    <style>
        /* Modern Shop Page Product Card Design */
        .product-card {
            background: #ffffff;
            border-radius: 16px;
            overflow: hidden;
            box-shadow: 0 2px 12px rgba(0, 0, 0, 0.08);
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            border: 1px solid #f1f3f4;
            position: relative;
            height: 100%;
            display: flex;
            flex-direction: column;
            margin-bottom: 24px;
        }

        .product-card:hover {
            transform: translateY(-6px);
            box-shadow: 0 12px 35px rgba(0, 0, 0, 0.15);
            border-color: #e8eaed;
        }

        /* Enhanced Products Grid */
        #products-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 24px;
            padding: 24px;
            min-height: 400px;
        }

        /* Product Image Container */
        .product-image-container {
            position: relative;
            width: 100%;
            height: 280px;
            overflow: hidden;
            background: #fafbfc;
        }

        .product-image {
            width: 100%;
            height: 100%;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 16px;
        }

        .product-image img {
            width: 100%;
            height: 100%;
            object-fit: contain;
            transition: transform 0.3s ease;
            border-radius: 8px;
        }

        .product-card:hover .product-image img {
            transform: scale(1.05);
        }

        /* Offer Badge (Corner Style) */
        .offer-badge {
            position: absolute;
            top: 12px;
            left: 12px;
            background: linear-gradient(135deg, #ff4757, #ff3742);
            color: white;
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 11px;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            z-index: 10;
            box-shadow: 0 2px 8px rgba(255, 71, 87, 0.3);
            backdrop-filter: blur(10px);
        }

        /* Stock Status Badge (Small Pill) */
        .stock-badge {
            position: absolute;
            bottom: 12px;
            left: 12px;
            padding: 4px 10px;
            border-radius: 12px;
            font-size: 10px;
            font-weight: 500;
            text-transform: uppercase;
            letter-spacing: 0.3px;
            z-index: 10;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        .stock-badge.in-stock {
            background: rgba(34, 197, 94, 0.9);
            color: white;
        }

        .stock-badge.out-of-stock {
            background: rgba(239, 68, 68, 0.9);
            color: white;
        }

        /* Wishlist Button */
        .wishlist-btn {
            position: absolute;
            top: 12px;
            right: 12px;
            width: 36px;
            height: 36px;
            background: rgba(255, 255, 255, 0.95);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.3s ease;
            z-index: 10;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
            backdrop-filter: blur(10px);
        }

        .wishlist-btn:hover {
            background: #ff4757;
            color: white;
            transform: scale(1.1);
        }

        .wishlist-btn i {
            font-size: 14px;
            transition: all 0.3s ease;
        }

        /* Product Overlay */
        .product-overlay {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.7);
            display: flex;
            align-items: center;
            justify-content: center;
            opacity: 0;
            transition: all 0.3s ease;
            backdrop-filter: blur(2px);
        }

        .product-card:hover .product-overlay {
            opacity: 1;
        }

        .quick-view-btn {
            background: #ffffff;
            color: #1a1a1a;
            border: none;
            padding: 12px 24px;
            border-radius: 8px;
            font-weight: 600;
            font-size: 14px;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        }

        .quick-view-btn:hover {
            background: #f8f9fa;
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.2);
        }

        /* Product Info Section */
        .product-info {
            padding: 20px;
            background: white;
            flex: 1;
            display: flex;
            flex-direction: column;
            gap: 12px;
        }

        .product-name {
            font-size: 16px;
            font-weight: 600;
            color: #1a1a1a;
            line-height: 1.4;
            margin: 0;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }

        .product-category {
            font-size: 12px;
            color: #6b7280;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            font-weight: 500;
            margin: 0;
        }

        /* Rating */
        .product-rating {
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .stars {
            display: flex;
            align-items: center;
            gap: 1px;
        }

        .stars i {
            color: #fbbf24;
            font-size: 12px;
        }

        .rating-text {
            font-size: 11px;
            color: #9ca3af;
            font-weight: 500;
        }

        /* Price */
        .product-price {
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .current-price {
            font-size: 18px;
            font-weight: 700;
            color: #1a1a1a;
        }

        .original-price {
            font-size: 14px;
            color: #9ca3af;
            text-decoration: line-through;
            font-weight: 500;
        }

        /* Product Actions */
        .product-actions {
            margin-top: 16px;
        }

        .add-to-cart-btn {
            background: #1a1a1a;
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 8px;
            font-size: 14px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            width: 100%;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
        }

        .add-to-cart-btn:hover {
            background: #2d2d2d;
            transform: translateY(-1px);
        }

        .add-to-cart-btn:disabled {
            background: #e5e7eb;
            color: #9ca3af;
            cursor: not-allowed;
            transform: none;
        }

        /* Notification Styles */
        .notification {
            position: fixed;
            top: 24px;
            right: 24px;
            background: #10b981;
            color: white;
            padding: 16px 24px;
            border-radius: 12px;
            box-shadow: 0 10px 25px rgba(16, 185, 129, 0.3);
            z-index: 1000;
            animation: slideIn 0.3s ease;
            font-weight: 500;
            font-size: 14px;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        @keyframes slideIn {
            from {
                transform: translateX(100%);
                opacity: 0;
            }
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }

        @keyframes slideOut {
            from {
                transform: translateX(0);
                opacity: 1;
            }
            to {
                transform: translateX(100%);
                opacity: 0;
            }
        }

        /* No Products Message */
        .no-products {
            text-align: center;
            padding: 60px 20px;
            color: #6b7280;
            grid-column: 1 / -1;
        }

        .no-products h3 {
            font-size: 24px;
            margin-bottom: 10px;
            color: #1a1a1a;
        }

        .no-products p {
            font-size: 16px;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .product-image-container {
                height: 240px;
            }

            .product-info {
                padding: 16px;
            }

            .product-name {
                font-size: 15px;
            }

            .current-price {
                font-size: 16px;
            }

            .offer-badge {
                font-size: 10px;
                padding: 4px 8px;
            }

            .stock-badge {
                font-size: 9px;
                padding: 3px 8px;
            }

            .wishlist-btn {
                width: 32px;
                height: 32px;
            }

            .wishlist-btn i {
                font-size: 12px;
            }
        }

        @media (max-width: 480px) {
            .product-image-container {
                height: 200px;
            }

            .product-info {
                padding: 12px;
                gap: 8px;
            }

            .product-name {
                font-size: 14px;
            }

            .current-price {
                font-size: 15px;
            }

            #products-container {
                grid-template-columns: 1fr;
                gap: 16px;
                padding: 16px;
            }
        }

        /* Enhanced Filter Section */
        .filter-section {
            background: #ffffff;
            border-radius: 12px;
            padding: 20px;
            margin-bottom: 24px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);
            border: 1px solid #f1f3f4;
        }

        .filter-section h3 {
            color: #1a1a1a;
            font-size: 16px;
            font-weight: 600;
            margin-bottom: 16px;
        }

        .filter-section select,
        .filter-section input {
            border: 1px solid #e5e7eb;
            border-radius: 8px;
            padding: 10px 12px;
            font-size: 14px;
            transition: all 0.3s ease;
            background: #ffffff;
        }

        .filter-section select:focus,
        .filter-section input:focus {
            outline: none;
            border-color: #3b82f6;
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
        }

        /* Enhanced Search Bar */
        .search-container {
            position: relative;
            margin-bottom: 24px;
        }

        .search-container input {
            width: 100%;
            padding: 12px 16px 12px 48px;
            border: 1px solid #e5e7eb;
            border-radius: 12px;
            font-size: 16px;
            background: #ffffff;
            transition: all 0.3s ease;
        }

        .search-container input:focus {
            outline: none;
            border-color: #3b82f6;
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
        }

        .search-container .search-icon {
            position: absolute;
            left: 16px;
            top: 50%;
            transform: translateY(-50%);
            color: #9ca3af;
            font-size: 16px;
        }
    </style>
</body>
</html>