<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shoezy - Premium Footwear Store</title>
    <link rel="stylesheet" href="/css/shopPage.css">
</head>
<body>
    <!-- Header -->
   <%-include("../partials/user/header")%>

    <!-- Hero Section -->
    <section class="hero">
        <div class="hero-content">
            <h2>Step Into Style</h2>
            <p>Discover our premium collection of footwear</p>
            <button class="cta-button">Shop Now</button>
        </div>
        <div class="hero-image">
            <div class="featured-shoe">
                <img src="https://images.unsplash.com/photo-1549298916-b41d501d3772?w=400&h=300&fit=crop" alt="Featured Shoe">
            </div>
        </div>
    </section>

    <!-- Shop Section -->
    <section class="shop-section" id="shop">
        <div class="container">
            <h2 class="section-title">Our Collection</h2>
            
            <!-- Filters -->
            <div class="filters">
                <div class="filter-group">
                    <label for="category">Category:</label>
                    <select id="category" onchange="filterProducts()">
                        <option value="">All Categories</option>
                        <% if (categories && categories.length > 0) { %>
                            <% categories.forEach(category => { %>
                                <option value="<%= category._id %>"><%= category.name %></option>
                            <% }); %>
                        <% } %>
                    </select>
                </div>

                <div class="filter-group">
                    <label for="minPrice">Min Price:</label>
                    <input type="number" id="minPrice" placeholder="0" onchange="filterProducts()">
                </div>

                <div class="filter-group">
                    <label for="maxPrice">Max Price:</label>
                    <input type="number" id="maxPrice" placeholder="1000" onchange="filterProducts()">
                </div>

                <div class="filter-group">
                    <label for="sortBy">Sort By:</label>
                    <select id="sortBy" onchange="sortProducts()">
                        <option value="name-asc">Name (A-Z)</option>
                        <option value="name-desc">Name (Z-A)</option>
                        <option value="price-asc">Price (Low to High)</option>
                        <option value="price-desc">Price (High to Low)</option>
                    </select>
                </div>

                <button class="clear-filters" onclick="clearFilters()">Clear Filters</button>
            </div>

            <!-- Products Grid -->
            <div class="products-grid" id="productsGrid">
                <!-- Products will be generated by JavaScript -->
            </div>
        </div>
    </section>

    <!-- Footer -->
      <%-include("../partials/user/userfooter")%>


    <script>
        // Dynamic product data from database
        const products = [
            <% if (products && products.length > 0) { %>
                <% products.forEach((product, index) => { %>
                    <% 
                        // Calculate price from variants
                        let minPrice = 0;
                        let maxPrice = 0;
                        let totalQuantity = 0;
                        
                        if (product.variants && product.variants.length > 0) {
                            const prices = product.variants.map(v => v.salePrice);
                            minPrice = Math.min(...prices);
                            maxPrice = Math.max(...prices);
                            totalQuantity = product.variants.reduce((sum, v) => sum + v.variantQuantity, 0);
                        }
                    %>
                    {
                        id: "<%= product._id %>",
                        name: "<%= product.productName %>",
                        price: <%= minPrice %>,
                        originalPrice: <%= product.variants && product.variants.length > 0 ? Math.min(...product.variants.map(v => v.variantPrice)) : 0 %>,
                        salePrice: <%= minPrice %>,
                        category: "<%= product.category ? product.category._id : '' %>",
                        categoryName: "<%= product.category ? product.category.name : 'Uncategorized' %>",
                        image: "<%= product.images && product.images.length > 0 ? product.images[0] : 'https://images.unsplash.com/photo-1549298916-b41d501d3772?w=300&h=200&fit=crop' %>",
                        description: "<%= product.description || '' %>",
                        quantity: <%= totalQuantity %>,
                        status: "<%= product.status || 'Available' %>",
                        brand: "<%= product.brand || '' %>",
                        color: "<%= product.color || '' %>",
                        productOffer: <%= product.productOffer || 0 %>,
                        rating: <%= product.ratings && product.ratings.average ? product.ratings.average : 4.5 %>,
                        ratingCount: <%= product.ratings && product.ratings.count ? product.ratings.count : 0 %>
                    }<%= index < products.length - 1 ? ',' : '' %>
                <% }); %>
            <% } %>
        ];

        let filteredProducts = [...products];
        let cart = [];

        // Display products
        function displayProducts(productsToShow = filteredProducts) {
            const grid = document.getElementById('productsGrid');
            grid.innerHTML = '';

            if (productsToShow.length === 0) {
                grid.innerHTML = '<div class="no-products"><h3>No products found</h3><p>Try adjusting your filters or check back later.</p></div>';
                return;
            }

            productsToShow.forEach(product => {
                const productCard = document.createElement('div');
                productCard.className = 'product-card';
                
                // Handle pricing display - show only one price
                let priceHTML = `<p class="price">₹${product.salePrice || product.price}</p>`;

                productCard.innerHTML = `
                    <div class="product-image" onclick="window.location.href='/product/${product.id}'" style="cursor: pointer;">
                        <img src="${product.image}" alt="${product.name}" onerror="this.src='https://images.unsplash.com/photo-1549298916-b41d501d3772?w=300&h=200&fit=crop'">
                        <div class="product-overlay">
                            <button class="quick-view" onclick="event.stopPropagation(); quickView('${product.id}')">View Details</button>
                        </div>
                    </div>
                    <div class="product-info" onclick="window.location.href='/product/${product.id}'" style="cursor: pointer;">
                        <h3>${product.name}</h3>
                        <p class="category">${product.categoryName}</p>
                        <div class="rating">
                            ${'★'.repeat(Math.floor(product.rating))}${'☆'.repeat(5 - Math.floor(product.rating))}
                            <span>(${product.rating})</span>
                        </div>
                        ${priceHTML}
                        <div class="product-actions">
                            <button class="add-to-cart" onclick="event.stopPropagation(); addToCart('${product.id}')" ${product.quantity <= 0 ? 'disabled' : ''}>
                                ${product.quantity <= 0 ? 'Out of Stock' : 'Add to Cart'}
                            </button>
                        </div>
                    </div>
                `;
                grid.appendChild(productCard);
            });
        }

        // Filter products
        function filterProducts() {
            const category = document.getElementById('category').value;
            const minPrice = parseFloat(document.getElementById('minPrice').value) || 0;
            const maxPrice = parseFloat(document.getElementById('maxPrice').value) || Infinity;

            filteredProducts = products.filter(product => {
                const matchesCategory = !category || product.category === category;
                const matchesPrice = product.price >= minPrice && product.price <= maxPrice;
                return matchesCategory && matchesPrice;
            });

            displayProducts();
        }

        // Sort products
        function sortProducts() {
            const sortBy = document.getElementById('sortBy').value;

            filteredProducts.sort((a, b) => {
                switch(sortBy) {
                    case 'name-asc':
                        return a.name.localeCompare(b.name);
                    case 'name-desc':
                        return b.name.localeCompare(a.name);
                    case 'price-asc':
                        return a.price - b.price;
                    case 'price-desc':
                        return b.price - a.price;
                    default:
                        return 0;
                }
            });

            displayProducts();
        }

        // Clear filters
        function clearFilters() {
            document.getElementById('category').value = '';
            document.getElementById('minPrice').value = '';
            document.getElementById('maxPrice').value = '';
            document.getElementById('sortBy').value = 'name-asc';
            filteredProducts = [...products];
            displayProducts();
        }

        // Add to cart
        function addToCart(productId) {
            const product = products.find(p => p.id === productId);
            cart.push(product);
            updateCartCount();
            
            // Show notification
            showNotification(`${product.name} added to cart!`);
        }

        // Update cart count
        function updateCartCount() {
            document.querySelector('.cart-count').textContent = cart.length;
        }

        // Quick view - Navigate to product detail page
        function quickView(productId) {
            window.location.href = `/product/${productId}`;
        }

        // Show notification
        function showNotification(message) {
            const notification = document.createElement('div');
            notification.className = 'notification';
            notification.textContent = message;
            document.body.appendChild(notification);
            
            setTimeout(() => {
                notification.remove();
            }, 3000);
        }

        // Initialize
        document.addEventListener('DOMContentLoaded', function() {
            displayProducts();
        });
    </script>
</body>
</html>