<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shoezy - Create Account</title>
    <link rel="stylesheet" href="/css/signupPage.css">
</head>

<body>
    <main>
        <div class="signup-container">

            <div class="signup-form">
                <h2>Create Account</h2>

                <div id="form-error-message" class="alert alert-danger" style="display: none;"></div>

                <button class="google-signup" onclick="window.location.href='/auth/google'">
                    <img src="https://www.google.com/favicon.ico" alt="Google Icon">
                    Sign up with Google
                </button>

                <form id="signform" novalidate>
                    <div class="input-group">
                        <input type="text" placeholder="Full Name" name="fullname" id="fullname">
                        <span id="error1" class="error-message"></span>
                    </div>

                    <div class="input-group">
                        <input type="email" placeholder="Email Address" name="email" id="email">
                        <span id="error2" class="error-message"></span>
                    </div>

                    <div class="input-group">
                        <input type="tel" placeholder="Phone Number" name="phone" id="phone">
                        <span id="error3" class="error-message"></span>
                    </div>

                    <div class="input-group">
                        <div class="password-container">
                            <input type="password" placeholder="Password" name="password" id="password">
                            <button type="button" class="password-toggle"
                                onclick="togglePassword('password')">üëÅÔ∏è</button>
                        </div>
                        <span id="error4" class="error-message"></span>
                    </div>

                    <div class="input-group">
                        <div class="password-container">
                            <input type="password" placeholder="Confirm Password" name="confirmPassword"
                                id="confirmPassword">
                            <button type="button" class="password-toggle"
                                onclick="togglePassword('confirmPassword')">üëÅÔ∏è</button>
                        </div>
                        <span id="error5" class="error-message"></span>
                    </div>

                    <div class="input-group">
                        <input type="text" placeholder="Referral Code (Optional)" name="referralCode">
                    </div>

                    <button type="submit" class="create-account-btn">Create Account</button>
                </form>

                <p class="login-link">Already have an account? <a href="/login">Login</a></p>
            </div>
        </div>
    </main>

    <script>
        // Password toggle functionality
        function togglePassword(inputId) {
            const input = document.getElementById(inputId);
            const toggleBtn = input.nextElementSibling;

            if (input.type === 'password') {
                input.type = 'text';
                toggleBtn.textContent = 'üîí';
                toggleBtn.style.color = '#17a2b8';
            } else {
                input.type = 'password';
                toggleBtn.textContent = 'üëÅÔ∏è';
                toggleBtn.style.color = '#2c9aa0';
            }
        }

        document.addEventListener('DOMContentLoaded', function () {
            const form = document.getElementById('signform');
            const fullnameInput = document.getElementById('fullname');
            const emailInput = document.getElementById('email');
            const phoneInput = document.getElementById('phone');
            const passwordInput = document.getElementById('password');
            const confirmPasswordInput = document.getElementById('confirmPassword');
            const formErrorMessage = document.getElementById('form-error-message');

            function setError(element, errorId, message) {
                const errorElement = document.getElementById(errorId);
                errorElement.textContent = message || '';
                if (message) {
                    element.classList.add('form-error');
                    errorElement.style.display = 'block';
                } else {
                    element.classList.remove('form-error');
                    errorElement.style.display = 'none';
                }
            }

            function setFormError(message) {
                formErrorMessage.textContent = message;
                formErrorMessage.style.display = message ? 'block' : 'none';
            }

            // Validation functions
            function validateFullname() {
                const fullname = fullnameInput.value.trim();
                if (!fullname) {
                    setError(fullnameInput, 'error1', 'Full name is required');
                    return false;
                } else if (fullname.length < 2) {
                    setError(fullnameInput, 'error1', 'Full name must be at least 2 characters');
                    return false;
                } else if (!/^[a-zA-Z\s]+$/.test(fullname)) {
                    setError(fullnameInput, 'error1', 'Only letters and spaces allowed');
                    return false;
                } else {
                    setError(fullnameInput, 'error1', '');
                    return true;
                }
            }

            function validateEmail() {
                const email = emailInput.value.trim();
                const emailRegex = /^[a-zA-Z][a-zA-Z0-9._%+-]{2,}@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
                if (!email) {
                    setError(emailInput, 'error2', 'Email is required');
                    return false;
                } else if (!emailRegex.test(email)) {
                    setError(emailInput, 'error2', 'Please enter a valid email address');
                    return false;
                } else {
                    setError(emailInput, 'error2', '');
                    return true;
                }
            }

            function validatePhone() {
                const phone = phoneInput.value.trim();
                const phoneRegex = /^[6-9]\d{9}$/;
                if (!phone) {
                    setError(phoneInput, 'error3', 'Phone number is required');
                    return false;
                } else if (!phoneRegex.test(phone)) {
                    setError(phoneInput, 'error3', 'Enter valid 10-digit phone starting with 6-9');
                    return false;
                } else {
                    setError(phoneInput, 'error3', '');
                    return true;
                }
            }

            function validatePassword() {
                const password = passwordInput.value;
                if (!password) {
                    setError(passwordInput, 'error4', 'Password is required');
                    return false;
                } else if (password.length < 5) {
                    setError(passwordInput, 'error4', 'Password must be at least 5 characters');
                    return false;
                } else if (!/(?=.*[a-z])(?=.*[A-Z])(?=.*\d)/.test(password)) {
                    setError(passwordInput, 'error4', 'Must include uppercase, lowercase, and number');
                    return false;
                } else {
                    setError(passwordInput, 'error4', '');
                    return true;
                }
            }

            function validateConfirmPassword() {
                const password = passwordInput.value;
                const confirmPassword = confirmPasswordInput.value;
                if (!confirmPassword) {
                    setError(confirmPasswordInput, 'error5', 'Please confirm your password');
                    return false;
                } else if (password !== confirmPassword) {
                    setError(confirmPasswordInput, 'error5', 'Passwords do not match');
                    return false;
                } else {
                    setError(confirmPasswordInput, 'error5', '');
                    return true;
                }
            }

            // Real-time validation
            fullnameInput.addEventListener('blur', validateFullname);
            emailInput.addEventListener('blur', validateEmail);
            phoneInput.addEventListener('blur', validatePhone);
            passwordInput.addEventListener('blur', validatePassword);
            confirmPasswordInput.addEventListener('blur', validateConfirmPassword);
            passwordInput.addEventListener('input', () => {
                if (confirmPasswordInput.value) validateConfirmPassword();
            });

            form.addEventListener('submit', async function (e) {
                e.preventDefault();
                setFormError(''); // Clear previous form errors

                const isFullnameValid = validateFullname();
                const isEmailValid = validateEmail();
                const isPhoneValid = validatePhone();
                const isPasswordValid = validatePassword();
                const isConfirmPasswordValid = validateConfirmPassword();

                if (!isFullnameValid || !isEmailValid || !isPhoneValid || !isPasswordValid || !isConfirmPasswordValid) {
                    const firstErrorField = document.querySelector('.form-error');
                    if (firstErrorField) {
                        firstErrorField.focus();
                    }
                    return;
                }

                const formData = new FormData(form);
                const data = Object.fromEntries(formData.entries());

                try {
                    const response = await fetch('/signup', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(data),
                    });

                    const result = await response.json();

                    if (response.ok && result.success) {
                        window.location.href = result.redirect;
                    } else {
                        setFormError(result.message || 'An unknown error occurred.');
                    }
                } catch (error) {
                    setFormError('A network error occurred. Please try again.');
                }
            });

            // Clear errors on input
            [fullnameInput, emailInput, phoneInput, passwordInput, confirmPasswordInput].forEach(input => {
                input.addEventListener('input', function () {
                    this.classList.remove('form-error');
                    const inputGroup = this.closest('.input-group');
                    if (inputGroup) {
                        const errorSpan = inputGroup.querySelector('.error-message');
                        if (errorSpan) {
                            errorSpan.style.display = 'none';
                            errorSpan.textContent = '';
                        }
                    }
                    setFormError(''); // Also clear general form error
                });
            });
        });
    </script>
</body>

</html>