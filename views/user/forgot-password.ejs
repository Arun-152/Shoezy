<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Shoezy - Forgot Password</title>
  <link rel="stylesheet" href="/css/forgott.css" />
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body>
  <div class="container">
    <div class="left">
      <h1 class="brand">Shoezy</h1>
      <div class="circle"></div>
      <img src="96fbe648-d624-4762-82d2-6a815cece7ae.png" alt="Shoe" class="shoe-img" />
    </div>
    <div class="right">
      <h2>Forgot Password</h2>
      <p>Please enter your registered email address to receive OTP</p>
      <form id="forgotPasswordForm">
        <div class="form-group">
          <label for="email">Email Address</label>
          <input type="email" id="email" name="email" placeholder="Enter your email" required />
          <span class="error-message" id="emailError"></span>
        </div>
        <button type="submit" class="btn" id="sendOtpBtn">Send OTP</button>
      </form>
      <div style="margin-top: 20px; text-align: center;">
        <a href="/login" style="color: #007bff; text-decoration: none;">Back to Login</a>
      </div>
    </div>
  </div>

  <script>
    document.getElementById('forgotPasswordForm').addEventListener('submit', async function(e) {
      e.preventDefault();
      
      const email = document.getElementById('email').value.trim();
      const emailError = document.getElementById('emailError');
      const sendOtpBtn = document.getElementById('sendOtpBtn');
      
      // Clear previous errors
      emailError.textContent = '';
      
      // Client-side validation
      if (!email) {
        emailError.textContent = 'Email is required';
        return;
      }
      
      const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      if (!emailRegex.test(email)) {
        emailError.textContent = 'Please enter a valid email address';
        return;
      }
      
      // Disable button and show loading
      sendOtpBtn.disabled = true;
      sendOtpBtn.textContent = 'Sending OTP...';
      
      try {
        const response = await fetch('/forgot-password', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ email })
        });
        
        const data = await response.json();
        
        if (data.success) {
          Swal.fire({
            icon: 'success',
            title: 'OTP Sent!',
            text: data.message,
            confirmButtonText: 'Verify OTP'
          }).then(() => {
            window.location.href = '/verify-reset-otp';
          });
        } else {
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: data.message,
            confirmButtonText: 'Try Again'
          });
        }
      } catch (error) {
        Swal.fire({
          icon: 'error',
          title: 'Network Error',
          text: 'Something went wrong. Please try again.',
          confirmButtonText: 'OK'
        });
      } finally {
        // Re-enable button
        sendOtpBtn.disabled = false;
        sendOtpBtn.textContent = 'Send OTP';
      }
    });
    
    // Real-time email validation
    document.getElementById('email').addEventListener('input', function() {
      const email = this.value.trim();
      const emailError = document.getElementById('emailError');
      
      if (email && !/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email)) {
        emailError.textContent = 'Please enter a valid email address';
      } else {
        emailError.textContent = '';
      }
    });
  </script>

  <style>
    .error-message {
      color: #dc3545;
      font-size: 12px;
      margin-top: 5px;
      display: block;
    }
    
    .btn:disabled {
      opacity: 0.6;
      cursor: not-allowed;
    }
    
    .form-group {
      margin-bottom: 20px;
    }
    
    .form-group label {
      display: block;
      margin-bottom: 5px;
      font-weight: 500;
    }
    
    .form-group input {
      width: 100%;
      padding: 12px;
      border: 1px solid #ddd;
      border-radius: 4px;
      font-size: 14px;
    }
    
    .form-group input:focus {
      outline: none;
      border-color: #007bff;
    }
  </style>
</body>
</html>