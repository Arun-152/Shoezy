<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Shoezy-Coupon</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
    <link rel="stylesheet" href="/css/admincoupenPage.css" />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        .error-msg {
            color: red;
            font-size: 0.85rem;
            margin-top: 2px;
            height: 16px;
        }

        /* Modal Styles */
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0, 0, 0, 0.5);
            animation: fadeIn 0.3s;
        }

        .modal-content {
            background-color: #fefefe;
            margin: 2% auto;
            padding: 0;
            border: none;
            width: 95%;
            max-width: 1000px;
            border-radius: 12px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);
            animation: slideIn 0.3s;
            max-height: 95vh;
            overflow-y: auto;
        }

        .modal-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 20px;
            border-radius: 12px 12px 0 0;
            position: relative;
            position: sticky;
            top: 0;
            z-index: 1001;
        }

        .modal-header h2 {
            margin: 0;
            font-size: 1.5rem;
            font-weight: 600;
        }

        .close {
            color: white;
            float: right;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
            position: absolute;
            right: 15px;
            top: 15px;
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
            transition: background-color 0.3s;
        }

        .close:hover,
        .close:focus {
            background-color: rgba(255, 255, 255, 0.2);
        }

        .modal-body {
            padding: 30px;
            background: white;
        }

        .coupon-details {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .detail-item {
            background: #f8f9fa;
            padding: 15px;
            border-radius: 8px;
            border-left: 4px solid #667eea;
        }

        .detail-label {
            font-weight: 600;
            color: #495057;
            font-size: 0.9rem;
            margin-bottom: 5px;
        }

        .detail-value {
            font-size: 1rem;
            color: #212529;
            font-weight: 500;
        }

        .status-badge {
            display: inline-block;
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 0.85rem;
            font-weight: 500;
        }

        .status-active {
            background-color: #d4edda;
            color: #155724;
        }

        .status-expired {
            background-color: #f8d7da;
            color: #721c24;
        }

        .status-not-started {
            background-color: #fff3cd;
            color: #856404;
        }

        .usage-section {
            grid-column: 1 / -1;
            background: #e3f2fd;
            border-left: 4px solid #2196f3;
        }

        /* Customer Details Section */
        .customer-section {
            margin-top: 30px;
            border-top: 2px solid #e9ecef;
            padding-top: 25px;
        }

        .section-title {
            font-size: 1.2rem;
            font-weight: 600;
            color: #495057;
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .section-title i {
            color: #667eea;
            font-size: 1.1rem;
        }

        .customer-stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            margin-bottom: 25px;
        }

        .stat-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 20px;
            border-radius: 10px;
            text-align: center;
            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
        }

        .stat-number {
            font-size: 2rem;
            font-weight: bold;
            margin-bottom: 5px;
        }

        .stat-label {
            font-size: 0.9rem;
            opacity: 0.9;
        }

        .customer-table-container {
            background: white;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }

        .customer-table {
            width: 100%;
            border-collapse: collapse;
            font-size: 0.9rem;
        }

        .customer-table th {
            background: #f8f9fa;
            padding: 12px 15px;
            text-align: left;
            font-weight: 600;
            color: #495057;
            border-bottom: 2px solid #dee2e6;
        }

        .customer-table td {
            padding: 12px 15px;
            border-bottom: 1px solid #dee2e6;
            color: #495057;
        }

        .customer-table tr:hover {
            background-color: #f8f9fa;
        }

        .customer-table tr:last-child td {
            border-bottom: none;
        }

        .customer-name {
            font-weight: 500;
            color: #212529;
        }

        .customer-email {
            color: #6c757d;
            font-size: 0.85rem;
        }

        .usage-date {
            font-size: 0.85rem;
            color: #6c757d;
        }

        .order-amount {
            font-weight: 500;
            color: #28a745;
        }

        .discount-applied {
            font-weight: 500;
            color: #dc3545;
        }

        .no-customers {
            text-align: center;
            padding: 40px;
            color: #6c757d;
            font-style: italic;
        }

        .action-buttons {
            display: flex;
            gap: 8px;
        }

        .action-btn {
            padding: 5px 8px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 0.85rem;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 4px;
            transition: all 0.3s;
        }

        .view-btn {
            background-color: #28a745;
            color: white;
        }

        .view-btn:hover {
            background-color: #218838;
            color: white;
        }

        .edit-btn {
            background-color: #ffc107;
            color: #212529;
        }

        .edit-btn:hover {
            background-color: #e0a800;
            color: #212529;
        }

        .delete-btn {
            background-color: #dc3545;
            color: white;
        }

        .delete-btn:hover {
            background-color: #c82333;
            color: white;
        }

        /* Coupon Status Styles */
        .coupon-status {
            display: inline-flex;
            align-items: center;
            gap: 6px;
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 0.85rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .status-active {
            background: linear-gradient(135deg, #d4edda 0%, #c3e6cb 100%);
            color: #155724;
            border: 1px solid #c3e6cb;
        }

        .status-expired {
            background: linear-gradient(135deg, #f8d7da 0%, #f1aeb5 100%);
            color: #721c24;
            border: 1px solid #f1aeb5;
            animation: pulse-red 2s infinite;
        }

        .status-not-started {
            background: linear-gradient(135deg, #fff3cd 0%, #ffeaa7 100%);
            color: #856404;
            border: 1px solid #ffeaa7;
        }

        @keyframes pulse-red {
            0% {
                box-shadow: 0 0 0 0 rgba(220, 53, 69, 0.4);
            }
            70% {
                box-shadow: 0 0 0 10px rgba(220, 53, 69, 0);
            }
            100% {
                box-shadow: 0 0 0 0 rgba(220, 53, 69, 0);
            }
        }

        .expired-text {
            color: #dc3545;
            font-weight: 700;
            text-transform: uppercase;
            letter-spacing: 1px;
            font-size: 0.9rem;
            display: inline-flex;
            align-items: center;
            gap: 6px;
            animation: glow-red 2s ease-in-out infinite alternate;
        }

        @keyframes glow-red {
            from {
                text-shadow: 0 0 5px #dc3545, 0 0 10px #dc3545, 0 0 15px #dc3545;
            }
            to {
                text-shadow: 0 0 10px #dc3545, 0 0 20px #dc3545, 0 0 30px #dc3545;
            }
        }

        .expired-icon {
            color: #dc3545;
            animation: rotate 2s linear infinite;
        }

        @keyframes rotate {
            from {
                transform: rotate(0deg);
            }
            to {
                transform: rotate(360deg);
            }
        }

        /* Hide action buttons for expired coupons */
        .expired-row .edit-btn,
        .expired-row .delete-btn {
            display: none;
        }

        .expired-row {
            background-color: rgba(248, 215, 218, 0.1);
        }

        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        @keyframes slideIn {
            from {
                transform: translateY(-50px);
                opacity: 0;
            }
            to {
                transform: translateY(0);
                opacity: 1;
            }
        }

        @media (max-width: 768px) {
            .coupon-details {
                grid-template-columns: 1fr;
            }
            
            .modal-content {
                width: 98%;
                margin: 5% auto;
            }

            .customer-stats {
                grid-template-columns: 1fr;
            }

            .customer-table-container {
                overflow-x: auto;
            }

            .customer-table {
                min-width: 600px;
            }
        }

        /* Scrollbar Styling */
        .modal-content::-webkit-scrollbar {
            width: 8px;
        }

        .modal-content::-webkit-scrollbar-track {
            background: #f1f1f1;
            border-radius: 4px;
        }

        .modal-content::-webkit-scrollbar-thumb {
            background: #888;
            border-radius: 4px;
        }

        .modal-content::-webkit-scrollbar-thumb:hover {
            background: #555;
        }
    </style>
</head>

<body>
    <div class="dashboard-container">
        <!-- Sidebar -->
        <%- include('../partials/admin/sidebar') %>

            <!-- Main Content -->
            <main class="main-content">
                <header class="header">
                    <div class="header-left">
                        <button class="menu-toggle" id="menuToggle">
                            <i class="fas fa-bars"></i>
                        </button>
                    </div>
                    <div class="header-right">
                        <div class="notification">
                            <i class="fas fa-bell"></i>
                        </div>
                        <div class="admin-profile">
                            <i class="fas fa-user-circle"></i>
                            <span>ADMIN</span>
                        </div>
                    </div>
                </header>

                <!-- Breadcrumb Navigation -->
                <%- include('../partials/admin/breadcrumb', { currentPath: '/admin/coupons' }) %>

                    <section class="page-content">
                        <div class="page-header">
                            <h1>Coupon Management</h1>
                        </div>

                        <!-- Controls Section -->
                        <div class="controls-section">
                            <div class="left-controls">
                                <div class="sort-control">
                                    <label>Sort:</label>
                                    <select class="sort-select">
                                        <option>Coupon Code</option>
                                        <option>Expiry Date</option>
                                    </select>
                                </div>
                                <div class="items-control">
                                    <label>by:</label>
                                    <select class="items-select">
                                        <option>10</option>
                                        <option>25</option>
                                        <option>50</option>
                                        <option>100</option>
                                    </select>
                                </div>
                                <div class="filter-control">
                                    <label>Filter:</label>
                                    <select class="filter-select">
                                        <option>All</option>
                                        <option>Active</option>
                                        <option>Expired</option>
                                    </select>
                                </div>
                            </div>
                            <div class="right-controls">
                                <button class="btn btn-primary"
                                    onclick="window.location.href='/admin/coupons/addCoupon'">
                                    <i class="fas fa-plus"></i> Add Coupon
                                </button>
                            </div>
                        </div>

                        <!-- Table Section -->
                        <div class="table-section">
                            <div class="table-container">
                                <table class="customers-table">
                                    <thead>
                                        <tr>
                                            <th class="table-header">Code</th>
                                            <th class="table-header">Expiry Date</th>
                                            <th class="table-header">Discount Type</th>
                                            <th class="table-header">Min Order</th>
                                            <th class="table-header">Total Usage Limit</th>
                                            <th class="table-header">Status</th>
                                            <th class="table-header">Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% if (coupons && coupons.length> 0) { %>
                                            <% coupons.forEach(coupon=> { %>
                                                <% 
                                                    const now = new Date();
                                                    const expiryDate = new Date(coupon.expireOn);
                                                    const startDate = new Date(coupon.startDate);
                                                    const isExpired = expiryDate < now;
                                                    const isNotStarted = startDate > now;
                                                    const isActive = !isExpired && !isNotStarted;
                                                %>
                                                <tr class="table-row <%= isExpired ? 'expired-row' : '' %>">
                                                    <td>
                                                        <%= coupon.name %>
                                                    </td>
                                                    <td>
                                                        <%= new Date(coupon.expireOn).toLocaleDateString() %>
                                                    </td>
                                                    <td>
                                                        <%= coupon.discountType.charAt(0).toUpperCase() +
                                                            coupon.discountType.slice(1) %>
                                                    </td>
                                                    <td>₹<%= coupon.minimumPrice %>
                                                    </td>
                                                    <td>
                                                        <%= coupon.totalUsageLimit || 'Unlimited' %>
                                                    </td>
                                                    <td>
                                                        <% if (isExpired) { %>
                                                            <div class="expired-text">
                                                                <i class="fas fa-exclamation-triangle expired-icon"></i>
                                                                EXPIRED
                                                            </div>
                                                        <% } else if (isNotStarted) { %>
                                                            <div class="coupon-status status-not-started">
                                                                <i class="fas fa-clock"></i>
                                                                Not Started
                                                            </div>
                                                        <% } else { %>
                                                            <div class="coupon-status status-active">
                                                                <i class="fas fa-check-circle"></i>
                                                                Active
                                                            </div>
                                                        <% } %>
                                                    </td>
                                                    <td>
                                                        <div class="action-buttons">
                                                            <button class="action-btn view-btn" onclick="openModal('<%= coupon._id %>')">
                                                                <i class="fas fa-eye"></i>
                                                            </button>
                                                            <% if (!isExpired) { %>
                                                                <a href="/admin/coupons/editCoupon?id=<%= coupon._id %>" class="action-btn edit-btn">
                                                                    <i class="fas fa-edit"></i>
                                                                </a>
                                                                <button class="action-btn delete-btn" onclick="deleteCoupon('<%= coupon._id %>', '<%= coupon.name %>')">
                                                                    <i class="fas fa-trash"></i>
                                                                </button>
                                                            <% } %>
                                                        </div>
                                                    </td>
                                                </tr>
                                                <% }); %>
                                                    <% } else { %>
                                                        <tr>
                                                            <td colspan="7">No coupons found</td>
                                                        </tr>
                                                        <% } %>
                                    </tbody>
                                </table>
                            </div>
                        </div>

                        <!-- Pagination Section -->
                        <div class="pagination-section">
                            <div class="pagination-info">1 of 10 Pages</div>
                            <div class="pagination-controls">
                                <button class="pagination-btn">
                                    <i class="fas fa-chevron-left"></i>
                                </button>
                                <div class="page-numbers">
                                    <button class="page-btn active">1</button>
                                </div>
                                <button class="pagination-btn">
                                    <i class="fas fa-chevron-right"></i>
                                </button>
                            </div>
                        </div>
                    </section>
            </main>
    </div>

    <!-- Enhanced Modal with Customer Details -->
    <div id="couponModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2><i class="fas fa-ticket-alt"></i> Coupon Details</h2>
                <span class="close" onclick="closeModal()">&times;</span>
            </div>
            <div class="modal-body">
                <!-- Coupon Information -->
                <div class="coupon-details">
                    <div class="detail-item">
                        <div class="detail-label">Coupon Code</div>
                        <div class="detail-value" id="modalCouponCode">-</div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">Discount Type</div>
                        <div class="detail-value" id="modalDiscountType">-</div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">Discount Value</div>
                        <div class="detail-value" id="modalDiscountValue">-</div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">Minimum Order Amount</div>
                        <div class="detail-value" id="modalMinOrder">-</div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">Start Date</div>
                        <div class="detail-value" id="modalStartDate">-</div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">Expiry Date</div>
                        <div class="detail-value" id="modalExpiryDate">-</div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">Total Usage Limit</div>
                        <div class="detail-value" id="modalUsageLimit">-</div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">Status</div>
                        <div class="detail-value" id="modalStatus">-</div>
                    </div>
                    <div class="detail-item usage-section">
                        <div class="detail-label">Current Usage Count</div>
                        <div class="detail-value" id="modalUsageCount">-</div>
                    </div>
                </div>

                <!-- Customer Usage Details Section -->
                <div class="customer-section">
                    <div class="section-title">
                        <i class="fas fa-users"></i>
                        Customer Usage Details
                    </div>

                    <!-- Usage Statistics -->
                    <div class="customer-stats">
                        <div class="stat-card">
                            <div class="stat-number" id="totalCustomers">0</div>
                            <div class="stat-label">Total Customers</div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-number" id="totalSavings">₹0</div>
                            <div class="stat-label">Total Savings</div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-number" id="avgOrderValue">₹0</div>
                            <div class="stat-label">Avg Order Value</div>
                        </div>
                    </div>

                    <!-- Customer Table -->
                    <div class="customer-table-container">
                        <table class="customer-table">
                            <thead>
                                <tr>
                                    <th>Customer Name</th>
                                    <th>Email</th>
                                    <th>Order ID</th>
                                    <th>Usage Date</th>
                                    <th>Order Amount</th>
                                    <th>Discount Applied</th>
                                </tr>
                            </thead>
                            <tbody id="customerTableBody">
                                <tr class="no-customers">
                                    <td colspan="6">
                                        <i class="fas fa-info-circle"></i>
                                        Loading customer data...
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Store coupon data for easy access
        const couponsData = {};
        
        <% if (coupons && coupons.length > 0) { %>
            <% coupons.forEach(coupon => { %>
                couponsData['<%= coupon._id %>'] = {
                    _id: '<%= coupon._id %>',
                    name: '<%= coupon.name %>',
                    expireOn: '<%= new Date(coupon.expireOn).toLocaleDateString() %>',
                    discountType: '<%= coupon.discountType.charAt(0).toUpperCase() + coupon.discountType.slice(1) %>',
                    minimumPrice: '<%= coupon.minimumPrice %>',
                    totalUsageLimit: '<%= coupon.totalUsageLimit || "Unlimited" %>',
                    startDate: '<%= new Date(coupon.startDate).toLocaleDateString() %>',
                    discountValue: '<%= coupon.discountValue || 0 %>',
                    usageCount: '<%= coupon.usageCount || 0 %>'
                };
            <% }); %>
        <% } %>

        async function openModal(couponId) {
            const coupon = couponsData[couponId];
            
            if (!coupon) {
                alert('Coupon data not found');
                return;
            }

            // Set basic coupon information
            document.getElementById('modalCouponCode').textContent = coupon.name;
            document.getElementById('modalDiscountType').textContent = coupon.discountType;
            document.getElementById('modalDiscountValue').textContent = 
                coupon.discountType.toLowerCase() === 'percentage' ? 
                coupon.discountValue + '%' : '₹' + coupon.discountValue;
            document.getElementById('modalMinOrder').textContent = '₹' + coupon.minimumPrice;
            document.getElementById('modalStartDate').textContent = coupon.startDate;
            document.getElementById('modalExpiryDate').textContent = coupon.expireOn;
            document.getElementById('modalUsageLimit').textContent = coupon.totalUsageLimit;
            document.getElementById('modalUsageCount').textContent = coupon.usageCount;
            
            // Determine status
            const now = new Date();
            const expiryDate = new Date(coupon.expireOn);
            const startDateObj = new Date(coupon.startDate);
            let status = 'Active';
            let statusClass = 'status-active';
            
            if (expiryDate < now) {
                status = 'Expired';
                statusClass = 'status-expired';
            } else if (startDateObj > now) {
                status = 'Not Started';
                statusClass = 'status-not-started';
            }
            
            const statusElement = document.getElementById('modalStatus');
            statusElement.innerHTML = `<span class="status-badge ${statusClass}">${status}</span>`;
            
            // Show modal
            document.getElementById('couponModal').style.display = 'block';
            
            // Load customer data
            await loadCustomerData(couponId);
        }

        async function loadCustomerData(couponId) {
            try {
                // Show loading state
                const tableBody = document.getElementById('customerTableBody');
                tableBody.innerHTML = `
                    <tr class="no-customers">
                        <td colspan="6">
                            <i class="fas fa-spinner fa-spin"></i>
                            Loading customer data...
                        </td>
                    </tr>
                `;

                // Fetch customer usage data from your backend
                // Replace this URL with your actual endpoint
                const response = await fetch(`/admin/coupons/${couponId}/customers`);
                
                if (!response.ok) {
                    throw new Error('Failed to fetch customer data');
                }
                
                const data = await response.json();
                
                // Update statistics
                updateCustomerStats(data.customers || []);
                
                // Update customer table
                updateCustomerTable(data.customers || []);
                
            } catch (error) {
                console.error('Error loading customer data:', error);
                
                // Show error state
                const tableBody = document.getElementById('customerTableBody');
                tableBody.innerHTML = `
                    <tr class="no-customers">
                        <td colspan="6">
                            <i class="fas fa-exclamation-triangle"></i>
                            Failed to load customer data. Please try again.
                        </td>
                    </tr>
                `;
                
                // Reset statistics
                document.getElementById('totalCustomers').textContent = '0';
                document.getElementById('totalSavings').textContent = '₹0';
                document.getElementById('avgOrderValue').textContent = '₹0';
            }
        }

        function updateCustomerStats(customers) {
            const totalCustomers = customers.length;
            const totalSavings = customers.reduce((sum, customer) => sum + (customer.discountApplied || 0), 0);
            const avgOrderValue = totalCustomers > 0 ? 
                customers.reduce((sum, customer) => sum + (customer.orderAmount || 0), 0) / totalCustomers : 0;

            document.getElementById('totalCustomers').textContent = totalCustomers;
            document.getElementById('totalSavings').textContent = '₹' + totalSavings.toLocaleString();
            document.getElementById('avgOrderValue').textContent = '₹' + Math.round(avgOrderValue).toLocaleString();
        }

        function updateCustomerTable(customers) {
            const tableBody = document.getElementById('customerTableBody');
            
            if (customers.length === 0) {
                tableBody.innerHTML = `
                    <tr class="no-customers">
                        <td colspan="6">
                            <i class="fas fa-info-circle"></i>
                            No customers have used this coupon yet.
                        </td>
                    </tr>
                `;
                return;
            }

            const rows = customers.map(customer => `
                <tr>
                    <td>
                        <div class="customer-name">${customer.name || 'N/A'}</div>
                    </td>
                    <td>
                        <div class="customer-email">${customer.email || 'N/A'}</div>
                    </td>
                    <td>#${customer.orderId || 'N/A'}</td>
                    <td>
                        <div class="usage-date">
                            ${customer.usageDate ? new Date(customer.usageDate).toLocaleDateString() : 'N/A'}
                        </div>
                    </td>
                    <td>
                        <div class="order-amount">₹${(customer.orderAmount || 0).toLocaleString()}</div>
                    </td>
                    <td>
                        <div class="discount-applied">₹${(customer.discountApplied || 0).toLocaleString()}</div>
                    </td>
                </tr>
            `).join('');

            tableBody.innerHTML = rows;
        }

        function closeModal() {
            document.getElementById('couponModal').style.display = 'none';
        }

        // Close modal when clicking outside of it
        window.onclick = function(event) {
            const modal = document.getElementById('couponModal');
            if (event.target === modal) {
                modal.style.display = 'none';
            }
        }

        // Close modal with Escape key
        document.addEventListener('keydown', function(event) {
            if (event.key === 'Escape') {
                closeModal();
            }
        });

        // Delete coupon function with SweetAlert confirmation
        async function deleteCoupon(couponId, couponName) {
            try {
                console.log('Delete function called with:', { couponId, couponName });
                
                // Show confirmation dialog
                const result = await Swal.fire({
                    title: 'Delete Coupon?',
                    html: `Are you sure you want to delete the coupon <strong>"${couponName}"</strong>?<br><br>This action cannot be undone.`,
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#dc3545',
                    cancelButtonColor: '#6c757d',
                    confirmButtonText: '<i class="fas fa-trash"></i> Yes, Delete',
                    cancelButtonText: '<i class="fas fa-times"></i> Cancel',
                    reverseButtons: true,
                    focusCancel: true,
                    customClass: {
                        confirmButton: 'btn btn-danger',
                        cancelButton: 'btn btn-secondary'
                    }
                });

                console.log('Confirmation result:', result);

                // If user confirmed deletion
                if (result.isConfirmed) {
                    console.log('User confirmed deletion, making API call...');
                    
                    // Show loading state
                    Swal.fire({
                        title: 'Deleting Coupon...',
                        html: 'Please wait while we delete the coupon.',
                        allowOutsideClick: false,
                        allowEscapeKey: false,
                        showConfirmButton: false,
                        didOpen: () => {
                            Swal.showLoading();
                        }
                    });

                    const apiUrl = `/admin/coupons/deleteCoupon/${couponId}`;
                    console.log('Making API call to:', apiUrl);

                    // Make API call to delete coupon
                    const response = await fetch(apiUrl, {
                        method: 'PATCH',
                        headers: {
                            'Content-Type': 'application/json',
                        }
                    });

                    console.log('API Response status:', response.status);
                    console.log('API Response ok:', response.ok);

                    const data = await response.json();
                    console.log('API Response data:', data);

                    if (response.ok && data.success) {
                        console.log('Delete successful, removing row immediately...');
                        
                        // Find and remove the coupon row from the table immediately
                        const deleteButton = document.querySelector(`button[onclick="deleteCoupon('${couponId}', '${couponName}')"]`);
                        const couponRow = deleteButton ? deleteButton.closest('tr') : null;
                        
                        if (couponRow) {
                            // Add smooth fade-out animation
                            couponRow.style.transition = 'all 0.4s ease-out';
                            couponRow.style.opacity = '0';
                            couponRow.style.transform = 'translateX(-20px)';
                            couponRow.style.backgroundColor = '#f8d7da';
                            
                            // Remove from DOM after animation
                            setTimeout(() => {
                                couponRow.remove();
                                
                                // Check if table is empty and show "No coupons found" message
                                const tbody = document.querySelector('.customers-table tbody');
                                const remainingRows = tbody.querySelectorAll('tr:not(.no-coupons-row)');
                                
                                if (remainingRows.length === 0) {
                                    tbody.innerHTML = `
                                        <tr class="no-coupons-row">
                                            <td colspan="7" style="text-align: center; padding: 40px; color: #6c757d; font-style: italic;">
                                                <i class="fas fa-info-circle" style="margin-right: 8px;"></i>
                                                No coupons found
                                            </td>
                                        </tr>
                                    `;
                                }
                                
                                console.log('Coupon row removed from table successfully');
                            }, 400);
                            
                            // Remove from local data store
                            delete couponsData[couponId];
                        }
                        
                        // Show success message after row starts fading
                        setTimeout(async () => {
                            await Swal.fire({
                                title: 'Deleted!',
                                text: 'Coupon has been successfully deleted.',
                                icon: 'success',
                                confirmButtonColor: '#28a745',
                                confirmButtonText: 'OK',
                                timer: 2000,
                                timerProgressBar: true
                            });
                        }, 100);

                        console.log('Delete operation completed successfully');
                    } else {
                        console.log('Delete failed:', data);
                        
                        // Show error message
                        await Swal.fire({
                            title: 'Error!',
                            text: data.message || 'Failed to delete coupon. Please try again.',
                            icon: 'error',
                            confirmButtonColor: '#dc3545',
                            confirmButtonText: 'OK'
                        });
                    }
                } else {
                    console.log('User cancelled deletion');
                }
            } catch (error) {
                console.error('Error deleting coupon:', error);
                
                // Show error message
                await Swal.fire({
                    title: 'Error!',
                    text: 'Something went wrong. Please try again.',
                    icon: 'error',
                    confirmButtonColor: '#dc3545',
                    confirmButtonText: 'OK'
                });
            }
        }

        // Mock data for customer modal only (not affecting delete API)
        const originalFetch = window.fetch;
        
        // Override fetch only for customer data endpoint
        window.fetch = async function(url, options) {
            // Only mock the customer data endpoint, let delete API go through normally
            if (url.includes('/customers') && !url.includes('deleteCoupon')) {
                const mockData = {
                    customers: [
                        {
                            name: 'John Doe',
                            email: 'john.doe@example.com',
                            orderId: 'ORD001',
                            usageDate: new Date().toISOString(),
                            orderAmount: 2500,
                            discountApplied: 250
                        },
                        {
                            name: 'Jane Smith',
                            email: 'jane.smith@example.com',
                            orderId: 'ORD002',
                            usageDate: new Date(Date.now() - 86400000).toISOString(),
                            orderAmount: 1800,
                            discountApplied: 180
                        },
                        {
                            name: 'Mike Johnson',
                            email: 'mike.johnson@example.com',
                            orderId: 'ORD003',
                            usageDate: new Date(Date.now() - 172800000).toISOString(),
                            orderAmount: 3200,
                            discountApplied: 320
                        }
                    ]
                };
                
                return {
                    ok: true,
                    json: async () => mockData
                };
            }
            
            // For all other requests (including delete), use the original fetch
            return originalFetch(url, options);
        };
    </script>

</body>

</html>