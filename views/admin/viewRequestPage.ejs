<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Manage Cancellation/Return Requests</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f6f9;
            margin: 0;
            padding: 20px;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
        }

        h2 {
            text-align: center;
            color: #333;
            margin-bottom: 20px;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            background-color: #fff;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        th, td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        th {
            background-color: #e9ecef;
            font-weight: bold;
        }

        tr:hover {
            background-color: #f8f9fa;
        }

        .actions button {
            padding: 6px 12px;
            margin-right: 5px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        .approve-btn {
            background-color: #28a745;
            color: white;
        }

        .reject-btn {
            background-color: #dc3545;
            color: white;
        }

        .approve-btn:hover,
        .reject-btn:hover {
            opacity: 0.9;
        }

        footer {
            text-align: center;
            margin-top: 20px;
            color: #666;
            font-size: 12px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Manage Cancellation/Return Requests</h2>
        <table>
            <thead>
                <tr>
                    <th>Order ID</th>
                    <th>Customer</th>
                    <th>Product</th>
                    <th>Action</th>
                    <th>Reason</th>
                    <th>Request Date</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                <% returnedOrders.forEach(order => {
                    order.items.forEach(item => {
                        if (item.status === 'Returned') { %>
                            <tr>
                                <td><%= order.orderNumber %></td>
                                <td><%= order.userId.fullname %></td>
                                <td><%= item.productId.name %></td>
                                <td>Return</td>
                                <td><%= order.orderReturnReason || 'No reason provided' %></td>
                                <td><%= item.returnDate ? item.returnDate.toDateString() : 'N/A' %></td>
                                <td class="actions">
                                    <button class="approve-btn"
                                            onclick="handleApprove('<%= order._id %>', '<%= item.productId._id %>')">Approve</button>
                                    <button class="reject-btn"
                                            onclick="handleReject('<%= order._id %>', '<%= item.productId._id %>')">Reject</button>
                                </td>
                            </tr>
                        <% }
                    });
                }); %>
            </tbody>
        </table>
        <footer>&copy; 2025 Tmz Admin Panel. All rights reserved.</footer>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        async function handleApprove(orderId, productId) {
            Swal.fire({
                title: 'Are you sure?',
                text: 'Do you want to approve this return request?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Yes, approve it!',
                cancelButtonText: 'Cancel'
            }).then(async (result) => {
                if (result.isConfirmed) {
                    try {
                        const response = await fetch(`/admin/orders/approve-return/${orderId}/${productId}`, {
                            method: 'PATCH'
                        });

                        const data = await response.json();

                        if (data.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Approved!',
                                text: data.message
                            }).then(() => location.reload());
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error!',
                                text: data.message
                            });
                        }
                    } catch (error) {
                        console.error('Approve Error:', error);
                        Swal.fire({
                            icon: 'error',
                            title: 'Server Error!',
                            text: 'Please try again later.'
                        });
                    }
                }
            });
        }

        async function handleReject(orderId, productId) {
            Swal.fire({
                title: 'Are you sure?',
                text: 'Do you want to reject this return request?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, reject it!',
                cancelButtonText: 'Cancel'
            }).then(async (result) => {
                if (result.isConfirmed) {
                    try {
                        const response = await fetch(`/admin/orders/reject-return/${orderId}/${productId}`, {
                            method: 'PATCH'
                        });

                        const data = await response.json();

                        if (data.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Rejected!',
                                text: data.message
                            }).then(() => location.reload());
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error!',
                                text: data.message
                            });
                        }
                    } catch (error) {
                        console.error('Reject Error:', error);
                        Swal.fire({
                            icon: 'error',
                            title: 'Server Error!',
                            text: 'Please try again later.'
                        });
                    }
                }
            });
        }
    </script>
</body>
</html>
